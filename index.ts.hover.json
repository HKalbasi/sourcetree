{"hovers":{"x5499":{"content":5501,"definition":5491,"references":8351},"x5507":{"content":5509,"definition":1454,"references":3760},"x5511":{"content":590,"definition":588,"references":1072},"x5517":{"content":5519,"definition":1331,"references":1411},"x5521":{"content":536,"definition":534,"references":1063},"x5540":{"content":5542,"definition":5532,"references":8358},"x5554":{"content":5552,"definition":5550,"references":8361},"x5560":{"content":5562,"definition":719,"references":1158},"x5568":{"content":5570,"definition":662,"references":1117},"x5576":{"content":5578,"definition":600,"references":1078},"x5580":{"definition":505,"references":1057},"x5586":{"content":5588,"definition":1383,"references":1429},"x5590":{"definition":1323,"references":1408},"x5596":{"content":5598,"definition":3379,"references":4528},"x5604":{"content":5606,"definition":1702,"references":3851},"x5612":{"content":5614,"definition":3587,"references":4655},"x5620":{"content":5622,"definition":1618,"references":3788},"x5624":{"definition":1446,"references":3757},"x5630":{"content":5632,"definition":4820,"references":5113},"x5638":{"content":5640,"definition":4744,"references":5073},"x5642":{"definition":4736,"references":5067},"x5648":{"content":5650,"definition":5380,"references":5454},"x5652":{"definition":5263,"references":5415},"x5658":{"content":5660,"definition":251,"references":439},"x5662":{"definition":183,"references":393},"x5690":{"content":5692,"definition":5678,"references":8382},"x5711":{"definition":5702,"references":8385},"x5727":{"content":5729,"definition":5719,"references":8388},"x5735":{"content":5737,"definition":1563,"references":3776},"x5753":{"content":5755,"definition":5745,"references":8392},"x5771":{"content":5773,"definition":5763,"references":8395},"x5789":{"content":5791,"definition":5781,"references":8398},"x5807":{"content":5809,"definition":5799,"references":8401},"x5815":{"content":5817,"definition":1545,"references":3773},"x5833":{"content":5835,"definition":5825,"references":8405},"x5837":{"definition":1601,"references":3782},"x5866":{"content":5868,"definition":5856,"references":8409},"x5886":{"content":5888,"definition":5876,"references":8412},"x5908":{"definition":5899,"references":8415},"x5913":{"content":5915,"references":8421},"x5917":{"content":5692,"definition":5678,"references":8382},"x5922":{"content":5924,"references":8428},"x5929":{"content":5931,"references":8434},"x5936":{"content":5938,"references":8441},"x5943":{"references":8445},"x5945":{"content":5938,"definition":5936,"references":8441},"x5947":{"content":5542,"definition":5532,"references":8358},"x5959":{"content":5957,"definition":5955,"references":8448},"x5961":{"content":5938,"definition":5936,"references":8441},"x5963":{"content":5542,"definition":5532,"references":8358},"x5975":{"content":5973,"definition":5971,"references":8451},"x5977":{"content":5931,"definition":5929,"references":8434},"x5982":{"content":5984,"references":8457},"x5986":{"content":5938,"definition":5936,"references":8441},"x5991":{"references":8460},"x6003":{"content":6001,"definition":5999,"references":8463},"x6008":{"content":6010,"references":8469},"x6015":{"references":8472},"x6020":{"content":6022,"references":8478},"x6027":{"content":6029,"references":8485},"x6031":{"content":5640,"definition":4744,"references":5073},"x6036":{"content":6038,"references":8492},"x6043":{"references":8496},"x6048":{"content":6050,"references":8502},"x6052":{"content":6038,"definition":6036,"references":8492},"x6054":{"content":1887,"definition":1885,"references":3959},"x6059":{"content":6061,"references":8510},"x6066":{"content":6068,"references":8517},"x6070":{"content":5640,"definition":4744,"references":5073},"x6075":{"content":6077,"references":8524},"x6082":{"content":6084,"references":8531},"x6089":{"references":8535},"x6091":{"content":6068,"definition":6066,"references":8517},"x6093":{"references":5206},"x6098":{"content":6100,"references":8543},"x6102":{"content":6077,"definition":6075,"references":8524},"x6104":{"content":6068,"definition":6066,"references":8517},"x6106":{"content":4756,"definition":4754,"references":5080},"x6108":{"content":6100,"definition":6098,"references":8543},"x6110":{"content":6084,"definition":6082,"references":8531},"x6112":{"content":6068,"definition":6066,"references":8517},"x6114":{"content":4756,"definition":4754,"references":5080},"x6116":{"content":6068,"definition":6066,"references":8517},"x6118":{"content":4756,"definition":4754,"references":5080},"x6120":{"content":6068,"definition":6066,"references":8517},"x6122":{"content":4756,"definition":4754,"references":5080},"x6127":{"content":6129,"references":8551},"x6131":{"content":6129,"definition":6127,"references":8551},"x6133":{"content":6068,"definition":6066,"references":8517},"x6135":{"content":4784,"definition":4782,"references":5095},"x6137":{"content":6077,"definition":6075,"references":8524},"x6139":{"content":6068,"definition":6066,"references":8517},"x6141":{"content":4756,"definition":4754,"references":5080},"x6143":{"content":6077,"definition":6075,"references":8524},"x6145":{"content":5029,"definition":5027,"references":5236},"x6147":{"content":6084,"definition":6082,"references":8531},"x6149":{"content":6068,"definition":6066,"references":8517},"x6151":{"content":4756,"definition":4754,"references":5080},"x6156":{"content":6158,"references":8560},"x6160":{"content":5640,"definition":4744,"references":5073},"x6165":{"content":6167,"references":8567},"x6172":{"content":6174,"references":8574},"x6179":{"references":8578},"x6181":{"content":6158,"definition":6156,"references":8560},"x6183":{"content":1929,"definition":1927,"references":3975},"x6188":{"content":6190,"references":8585},"x6195":{"references":8589},"x6197":{"content":6061,"definition":6059,"references":8510},"x6199":{"content":6190,"definition":6188,"references":8585},"x6201":{"content":6167,"definition":6165,"references":8567},"x6203":{"content":6174,"definition":6172,"references":8574},"x6215":{"content":6213,"definition":6211,"references":8592},"x6217":{"content":6129,"definition":6127,"references":8551},"x6219":{"content":6029,"definition":6027,"references":8485},"x6221":{"content":6050,"definition":6048,"references":8502},"x6226":{"content":6228,"references":8598},"x6233":{"content":6235,"references":8605},"x6240":{"content":6242,"references":8612},"x6244":{"content":5622,"definition":1618,"references":3788},"x6246":{"content":6242,"definition":6240,"references":8612},"x6248":{"content":5729,"definition":5719,"references":8388},"x6253":{"references":8616},"x6255":{"content":6242,"definition":6240,"references":8612},"x6261":{"references":8619},"x6266":{"content":6268,"references":8645},"x6273":{"content":6275,"references":8652},"x6277":{"content":5809,"definition":5799,"references":8401},"x6282":{"content":6284,"references":8659},"x6286":{"content":5606,"definition":1702,"references":3851},"x6288":{"content":6228,"definition":6226,"references":8598},"x6293":{"references":8663},"x6298":{"content":6300,"references":8669},"x6302":{"content":6284,"definition":6282,"references":8659},"x6304":{"content":1726,"definition":1724,"references":3864},"x6306":{"content":1652,"definition":1650,"references":3816},"x6308":{"content":6284,"definition":6282,"references":8659},"x6310":{"content":1742,"definition":1740,"references":3870},"x6312":{"content":1652,"definition":1650,"references":3816},"x6314":{"content":6275,"definition":6273,"references":8652},"x6316":{"content":2436,"definition":2434,"references":2459},"x6318":{"content":1901,"definition":1899,"references":3962},"x6320":{"content":6235,"definition":6233,"references":8605},"x6322":{"content":2743,"definition":2741,"references":2756},"x6324":{"content":5737,"definition":1563,"references":3776},"x6329":{"content":6331,"references":8682},"x6333":{"content":6284,"definition":6282,"references":8659},"x6335":{"content":1839,"definition":1837,"references":3927},"x6337":{"content":6300,"definition":6298,"references":8669},"x6342":{"content":6344,"references":8690},"x6346":{"content":6331,"definition":6329,"references":8682},"x6348":{"content":6275,"definition":6273,"references":8652},"x6360":{"content":6358,"definition":6356,"references":8694},"x6372":{"content":6370,"definition":6368,"references":8697},"x6374":{"content":6344,"definition":6342,"references":8690},"x6379":{"content":6381,"references":8703},"x6386":{"content":6388,"references":8710},"x6393":{"content":6395,"references":8716},"x6397":{"content":5817,"definition":1545,"references":3773},"x6402":{"content":6404,"references":8722},"x6406":{"content":5817,"definition":1545,"references":3773},"x6411":{"content":6413,"references":8728},"x6415":{"content":5817,"definition":1545,"references":3773},"x6420":{"references":8731},"x6425":{"references":8734},"x6430":{"references":8737},"x6435":{"content":6437,"references":8743},"x6442":{"content":6444,"references":8750},"x6446":{"content":5817,"definition":1545,"references":3773},"x6451":{"references":8753},"x6456":{"references":8756},"x6461":{"content":6463,"references":8762},"x6468":{"content":6470,"references":8768},"x6475":{"content":6477,"references":8774},"x6479":{"content":6228,"definition":6226,"references":8598},"x6484":{"content":6486,"references":8780},"x6488":{"content":6228,"definition":6226,"references":8598},"x6493":{"references":8783},"x6498":{"references":8786},"x6503":{"references":8789},"x6508":{"content":6510,"references":8795},"x6515":{"content":6517,"references":8802},"x6522":{"content":6524,"references":8808},"x6529":{"content":6531,"references":8814},"x6536":{"content":6538,"references":8820},"x6543":{"references":8823},"x6548":{"content":6550,"references":8829},"x6555":{"content":6557,"references":8836},"x6559":{"content":5888,"definition":5876,"references":8412},"x6564":{"references":8840},"x6566":{"content":6557,"definition":6555,"references":8836},"x6568":{"content":6557,"definition":6555,"references":8836},"x6570":{"content":6557,"definition":6555,"references":8836},"x6582":{"content":6580,"definition":6578,"references":8843},"x6584":{"content":6557,"definition":6555,"references":8836},"x6596":{"content":6594,"definition":6592,"references":8846},"x6608":{"content":6606,"definition":6604,"references":8849},"x6613":{"content":6615,"references":8855},"x6620":{"content":6622,"references":8862},"x6624":{"content":5868,"definition":5856,"references":8409},"x6626":{"content":5888,"definition":5876,"references":8412},"x6628":{"content":5888,"definition":5876,"references":8412},"x6633":{"references":8866},"x6635":{"content":6622,"definition":6620,"references":8862},"x6637":{"content":6622,"definition":6620,"references":8862},"x6639":{"content":5915,"definition":5913,"references":8421},"x6648":{"content":6646,"definition":6644,"references":8869},"x6650":{"content":6550,"definition":6548,"references":8829},"x6652":{"content":6622,"definition":6620,"references":8862},"x6654":{"content":6622,"definition":6620,"references":8862},"x6681":{"content":6665,"definition":6679,"references":8872},"x6683":{"content":5915,"definition":5913,"references":8421},"x6685":{"content":6646,"definition":6644,"references":8869},"x6687":{"content":6622,"definition":6620,"references":8862},"x6689":{"content":1929,"definition":1927,"references":3975},"x6691":{"content":6550,"definition":6548,"references":8829},"x6693":{"content":6213,"definition":6211,"references":8592},"x6695":{"content":6622,"definition":6620,"references":8862},"x6707":{"content":6705,"definition":6703,"references":8875},"x6709":{"content":5915,"definition":5913,"references":8421},"x6711":{"content":6646,"definition":6644,"references":8869},"x6713":{"content":6622,"definition":6620,"references":8862},"x6725":{"content":6723,"definition":6721,"references":8878},"x6727":{"content":6622,"definition":6620,"references":8862},"x6729":{"content":6705,"definition":6703,"references":8875},"x6731":{"content":6622,"definition":6620,"references":8862},"x6733":{"content":6723,"definition":6721,"references":8878},"x6735":{"content":2882,"definition":2880,"references":4321},"x6743":{"content":6745,"references":8885},"x6750":{"content":6752,"references":8891},"x6757":{"content":6759,"references":8898},"x6764":{"content":6766,"references":8905},"x6771":{"content":6773,"references":8912},"x6775":{"content":6510,"definition":6508,"references":8795},"x6780":{"references":8916},"x6785":{"content":6787,"references":8922},"x6789":{"content":5660,"definition":251,"references":439},"x6794":{"content":6796,"references":8929},"x6798":{"content":5598,"definition":3379,"references":4528},"x6800":{"content":6752,"definition":6750,"references":8891},"x6802":{"content":6773,"definition":6771,"references":8912},"x6807":{"content":6809,"references":8936},"x6814":{"content":6816,"references":8943},"x6821":{"content":6823,"references":8950},"x6828":{"content":6830,"references":8957},"x6835":{"content":6837,"references":8964},"x6839":{"content":6796,"definition":6794,"references":8929},"x6844":{"content":6846,"references":8971},"x6848":{"content":5650,"definition":5380,"references":5454},"x6853":{"content":6855,"references":8978},"x6857":{"content":5632,"definition":4820,"references":5113},"x6859":{"content":6823,"definition":6821,"references":8950},"x6861":{"content":1929,"definition":1927,"references":3975},"x6866":{"content":6868,"references":8985},"x6873":{"references":8989},"x6875":{"content":6816,"definition":6814,"references":8943},"x6877":{"content":6868,"definition":6866,"references":8985},"x6879":{"content":3055,"definition":3053,"references":4400},"x6881":{"content":5501,"definition":5491,"references":8351},"x6883":{"content":6759,"definition":6757,"references":8898},"x6888":{"content":6890,"references":8996},"x6895":{"content":6897,"references":9002},"x6902":{"references":9005},"x6904":{"content":5578,"definition":600,"references":1078},"x6906":{"content":5519,"definition":1331,"references":1411},"x6908":{"content":6759,"definition":6757,"references":8898},"x6910":{"content":6846,"definition":6844,"references":8971},"x6912":{"content":5403,"definition":5401,"references":5469},"x6917":{"content":6919,"references":9012},"x6921":{"content":6022,"definition":6020,"references":8478},"x6923":{"content":6855,"definition":6853,"references":8978},"x6928":{"references":9015},"x6930":{"content":5578,"definition":600,"references":1078},"x6932":{"content":5519,"definition":1331,"references":1411},"x6934":{"content":6759,"definition":6757,"references":8898},"x6936":{"content":5509,"definition":1454,"references":3760},"x6938":{"content":5519,"definition":1331,"references":1411},"x6940":{"content":5588,"definition":1383,"references":1429},"x6942":{"content":3093,"definition":3091,"references":10082},"x6944":{"content":5578,"definition":600,"references":1078},"x6946":{"content":5519,"definition":1331,"references":1411},"x6948":{"content":6759,"definition":6757,"references":8898},"x6950":{"content":5509,"definition":1454,"references":3760},"x6952":{"content":5519,"definition":1331,"references":1411},"x6954":{"content":5588,"definition":1383,"references":1429},"x6956":{"content":3093,"definition":3091,"references":10082},"x6958":{"content":5578,"definition":600,"references":1078},"x6960":{"content":5519,"definition":1331,"references":1411},"x6962":{"content":6759,"definition":6757,"references":8898},"x6964":{"content":6787,"definition":6785,"references":8922},"x6966":{"content":207,"definition":205,"references":408},"x6968":{"content":6787,"definition":6785,"references":8922},"x6970":{"content":5660,"definition":251,"references":439},"x6975":{"content":6977,"references":9023},"x6992":{"content":6984,"definition":6982,"references":9027},"x6994":{"content":5817,"definition":1545,"references":3773},"x6996":{"content":6984,"definition":6982,"references":9027},"x7001":{"content":7003,"references":9033},"x7005":{"content":2979,"definition":2977,"references":4377},"x7007":{"content":2996,"definition":2994,"references":4380},"x7009":{"content":6823,"definition":6821,"references":8950},"x7011":{"content":1929,"definition":1927,"references":3975},"x7016":{"content":7018,"references":9042},"x7023":{"references":9046},"x7028":{"content":7030,"references":9052},"x7032":{"content":5570,"definition":662,"references":1117},"x7037":{"content":7039,"references":9059},"x7041":{"content":6381,"definition":6379,"references":8703},"x7046":{"references":9063},"x7051":{"content":7053,"references":9069},"x7055":{"content":6437,"definition":6435,"references":8743},"x7060":{"references":9073},"x7065":{"content":7067,"references":9079},"x7072":{"content":7074,"references":9086},"x7076":{"content":5817,"definition":1545,"references":3773},"x7081":{"content":7083,"references":9093},"x7088":{"references":9097},"x7093":{"references":9100},"x7095":{"content":7074,"definition":7072,"references":9086},"x7097":{"content":7053,"definition":7051,"references":9069},"x7099":{"content":7053,"definition":7051,"references":9069},"x7101":{"content":7074,"definition":7072,"references":9086},"x7103":{"content":7083,"definition":7081,"references":9093},"x7105":{"content":6837,"definition":6835,"references":8964},"x7107":{"content":1652,"definition":1650,"references":3816},"x7109":{"content":7018,"definition":7016,"references":9042},"x7111":{"content":2436,"definition":2434,"references":2459},"x7113":{"content":840,"definition":838,"references":1242},"x7118":{"content":7120,"references":9107},"x7125":{"references":9111},"x7130":{"content":7132,"references":9117},"x7134":{"content":6816,"definition":6814,"references":8943},"x7136":{"content":7018,"definition":7016,"references":9042},"x7138":{"content":3055,"definition":3053,"references":4400},"x7140":{"content":7120,"definition":7118,"references":9107},"x7142":{"references":8619},"x7147":{"content":7149,"references":9123},"x7151":{"content":7120,"definition":7118,"references":9107},"x7153":{"references":4210},"x7158":{"content":7160,"references":9131},"x7162":{"content":6809,"definition":6807,"references":8936},"x7164":{"content":1652,"definition":1650,"references":3816},"x7166":{"content":7149,"definition":7147,"references":9123},"x7168":{"content":5809,"definition":5799,"references":8401},"x7170":{"content":7160,"definition":7158,"references":9131},"x7172":{"content":6358,"definition":6356,"references":8694},"x7184":{"content":7182,"definition":7180,"references":9135},"x7186":{"content":7160,"definition":7158,"references":9131},"x7198":{"content":7196,"definition":7194,"references":9138},"x7200":{"content":7182,"definition":7180,"references":9135},"x7202":{"content":7160,"definition":7158,"references":9131},"x7204":{"content":6358,"definition":6356,"references":8694},"x7206":{"content":6370,"definition":6368,"references":8697},"x7208":{"content":7160,"definition":7158,"references":9131},"x7210":{"content":7196,"definition":7194,"references":9138},"x7212":{"content":6370,"definition":6368,"references":8697},"x7217":{"content":7219,"references":9144},"x7221":{"content":5817,"definition":1545,"references":3773},"x7223":{"references":4340},"x7228":{"content":7230,"references":9152},"x7232":{"content":5817,"definition":1545,"references":3773},"x7234":{"references":4340},"x7239":{"content":7241,"references":9159},"x7243":{"references":4340},"x7248":{"content":7250,"references":9166},"x7252":{"content":5614,"definition":3587,"references":4655},"x7254":{"content":6796,"definition":6794,"references":8929},"x7256":{"content":7160,"definition":7158,"references":9131},"x7258":{"content":2436,"definition":2434,"references":2459},"x7260":{"content":7250,"definition":7248,"references":9166},"x7265":{"content":7267,"references":9173},"x7269":{"content":6837,"definition":6835,"references":8964},"x7271":{"content":1652,"definition":1650,"references":3816},"x7273":{"content":7250,"definition":7248,"references":9166},"x7275":{"references":4131},"x7277":{"content":5755,"definition":5745,"references":8392},"x7282":{"content":7284,"references":9182},"x7286":{"content":6809,"definition":6807,"references":8936},"x7288":{"content":1652,"definition":1650,"references":3816},"x7290":{"content":7267,"definition":7265,"references":9173},"x7292":{"references":4210},"x7294":{"content":5809,"definition":5799,"references":8401},"x7296":{"content":7284,"definition":7282,"references":9182},"x7298":{"content":2436,"definition":2434,"references":2459},"x7300":{"content":7160,"definition":7158,"references":9131},"x7302":{"content":2436,"definition":2434,"references":2459},"x7304":{"content":7067,"definition":7065,"references":9079},"x7306":{"content":7284,"definition":7282,"references":9182},"x7308":{"content":2436,"definition":2434,"references":2459},"x7313":{"references":9186},"x7315":{"content":6268,"definition":6266,"references":8645},"x7317":{"content":7284,"definition":7282,"references":9182},"x7319":{"content":6796,"definition":6794,"references":8929},"x7321":{"content":7230,"definition":7228,"references":9152},"x7323":{"content":7284,"definition":7282,"references":9182},"x7325":{"content":2436,"definition":2434,"references":2459},"x7330":{"content":7332,"references":9192},"x7334":{"content":5614,"definition":3587,"references":4655},"x7336":{"content":6796,"definition":6794,"references":8929},"x7338":{"content":7160,"definition":7158,"references":9131},"x7340":{"content":2436,"definition":2434,"references":2459},"x7342":{"content":5835,"definition":5825,"references":8405},"x7344":{"content":7332,"definition":7330,"references":9192},"x7346":{"content":7067,"definition":7065,"references":9079},"x7348":{"content":7332,"definition":7330,"references":9192},"x7350":{"content":2436,"definition":2434,"references":2459},"x7355":{"references":9196},"x7357":{"content":6615,"definition":6613,"references":8855},"x7359":{"content":7332,"definition":7330,"references":9192},"x7371":{"content":7369,"definition":7367,"references":9199},"x7383":{"content":7381,"definition":7379,"references":9202},"x7385":{"content":7219,"definition":7217,"references":9144},"x7387":{"content":7332,"definition":7330,"references":9192},"x7389":{"content":2436,"definition":2434,"references":2459},"x7394":{"content":7396,"references":9208},"x7398":{"content":5614,"definition":3587,"references":4655},"x7400":{"content":6796,"definition":6794,"references":8929},"x7402":{"content":7160,"definition":7158,"references":9131},"x7404":{"content":2436,"definition":2434,"references":2459},"x7406":{"content":7396,"definition":7394,"references":9208},"x7408":{"content":6977,"definition":6975,"references":9023},"x7420":{"content":7418,"definition":7416,"references":9212},"x7422":{"content":7396,"definition":7394,"references":9208},"x7424":{"references":4131},"x7426":{"content":7241,"definition":7239,"references":9159},"x7428":{"content":7396,"definition":7394,"references":9208},"x7430":{"references":4131},"x7432":{"content":7219,"definition":7217,"references":9144},"x7434":{"content":7230,"definition":7228,"references":9152},"x7436":{"content":7241,"definition":7239,"references":9159},"x7438":{"content":7039,"definition":7037,"references":9059},"x7440":{"content":7160,"definition":7158,"references":9131},"x7442":{"content":2436,"definition":2434,"references":2459},"x7447":{"content":7449,"references":9218},"x7451":{"content":7219,"definition":7217,"references":9144},"x7456":{"content":7458,"references":9224},"x7460":{"content":7230,"definition":7228,"references":9152},"x7465":{"content":7467,"references":9230},"x7469":{"content":7241,"definition":7239,"references":9159},"x7474":{"references":9233},"x7476":{"content":7030,"definition":7028,"references":9052},"x7478":{"content":2571,"definition":2569,"references":4193},"x7483":{"content":7485,"references":9240},"x7487":{"content":7160,"definition":7158,"references":9131},"x7489":{"content":6358,"definition":6356,"references":8694},"x7494":{"content":7496,"references":9246},"x7498":{"content":7160,"definition":7158,"references":9131},"x7500":{"content":2436,"definition":2434,"references":2459},"x7505":{"references":9249},"x7507":{"content":7030,"definition":7028,"references":9052},"x7509":{"content":2571,"definition":2569,"references":4193},"x7514":{"content":7516,"references":9255},"x7518":{"content":7160,"definition":7158,"references":9131},"x7520":{"content":7196,"definition":7194,"references":9138},"x7525":{"content":7527,"references":9261},"x7532":{"references":9264},"x7537":{"content":7539,"references":9270},"x7541":{"content":6816,"definition":6814,"references":8943},"x7543":{"content":7018,"definition":7016,"references":9042},"x7545":{"content":3055,"definition":3053,"references":4400},"x7550":{"content":7552,"references":9277},"x7554":{"content":5519,"definition":1331,"references":1411},"x7556":{"content":6759,"definition":6757,"references":8898},"x7558":{"content":7539,"definition":7537,"references":9270},"x7560":{"content":5578,"definition":600,"references":1078},"x7562":{"content":7552,"definition":7550,"references":9277},"x7564":{"content":1950,"definition":1948,"references":3988},"x7578":{"content":7574,"definition":7572,"references":9282},"x7583":{"content":7585,"references":9288},"x7590":{"content":7592,"references":9294},"x7597":{"references":9297},"x7602":{"content":7604,"references":9303},"x7609":{"content":7611,"references":9309},"x7616":{"content":7618,"references":9316},"x7623":{"references":9320},"x7625":{"content":6787,"definition":6785,"references":8922},"x7627":{"content":207,"definition":205,"references":408},"x7629":{"content":6787,"definition":6785,"references":8922},"x7631":{"content":5660,"definition":251,"references":439},"x7636":{"content":7638,"references":9326},"x7640":{"content":5519,"definition":1331,"references":1411},"x7642":{"content":6759,"definition":6757,"references":8898},"x7647":{"content":7649,"references":9333},"x7651":{"content":6977,"definition":6975,"references":9023},"x7656":{"content":7658,"references":9340},"x7660":{"content":6837,"definition":6835,"references":8964},"x7662":{"content":1652,"definition":1650,"references":3816},"x7664":{"content":7649,"definition":7647,"references":9333},"x7666":{"content":5773,"definition":5763,"references":8395},"x7668":{"content":5791,"definition":5781,"references":8398},"x7670":{"content":5809,"definition":5799,"references":8401},"x7675":{"content":7677,"references":9347},"x7679":{"content":7658,"definition":7656,"references":9340},"x7681":{"content":1901,"definition":1899,"references":3962},"x7686":{"content":7688,"references":9354},"x7693":{"references":9358},"x7695":{"content":7688,"definition":7686,"references":9354},"x7764":{"references":9361},"x7769":{"content":7771,"references":9372},"x7773":{"content":7658,"definition":7656,"references":9340},"x7775":{"content":1901,"definition":1899,"references":3962},"x7780":{"content":7782,"references":9379},"x7787":{"references":9383},"x7789":{"content":7782,"definition":7780,"references":9379},"x7791":{"references":9361},"x7793":{"content":5578,"definition":600,"references":1078},"x7795":{"content":7638,"definition":7636,"references":9326},"x7797":{"content":7649,"definition":7647,"references":9333},"x7799":{"content":1950,"definition":1948,"references":3988},"x7801":{"content":7574,"definition":7572,"references":9282},"x7806":{"content":7808,"references":9389},"x7810":{"content":7677,"definition":7675,"references":9347},"x7822":{"content":7820,"definition":7818,"references":9392},"x7827":{"content":7829,"references":9398},"x7834":{"references":9402},"x7836":{"content":7829,"definition":7827,"references":9398},"x7838":{"references":4210},"x7840":{"content":1929,"definition":1927,"references":3975},"x7845":{"content":7847,"references":9408},"x7849":{"content":5817,"definition":1545,"references":3773},"x7854":{"references":9412},"x7856":{"content":6268,"definition":6266,"references":8645},"x7858":{"content":6809,"definition":6807,"references":8936},"x7860":{"content":1652,"definition":1650,"references":3816},"x7862":{"content":7847,"definition":7845,"references":9408},"x7864":{"content":5809,"definition":5799,"references":8401},"x7866":{"content":6796,"definition":6794,"references":8929},"x7871":{"content":7873,"references":9418},"x7875":{"content":7771,"definition":7769,"references":9372},"x7877":{"content":7820,"definition":7818,"references":9392},"x7882":{"content":7884,"references":9424},"x7889":{"references":9428},"x7891":{"content":7884,"definition":7882,"references":9424},"x7893":{"references":4210},"x7895":{"content":1929,"definition":1927,"references":3975},"x7900":{"content":7902,"references":9434},"x7904":{"content":5817,"definition":1545,"references":3773},"x7909":{"references":9438},"x7911":{"content":6268,"definition":6266,"references":8645},"x7913":{"content":6809,"definition":6807,"references":8936},"x7915":{"content":1652,"definition":1650,"references":3816},"x7917":{"content":7902,"definition":7900,"references":9434},"x7919":{"content":5809,"definition":5799,"references":8401},"x7921":{"content":6796,"definition":6794,"references":8929},"x7926":{"references":9441},"x7928":{"content":6787,"definition":6785,"references":8922},"x7930":{"content":207,"definition":205,"references":408},"x7932":{"content":6787,"definition":6785,"references":8922},"x7934":{"content":5660,"definition":251,"references":439},"x7939":{"content":7941,"references":9447},"x7943":{"content":7003,"definition":7001,"references":9033},"x7945":{"content":1929,"definition":1927,"references":3975},"x7950":{"content":7952,"references":9454},"x7957":{"references":9458},"x7962":{"content":7964,"references":9464},"x7966":{"content":6830,"definition":6828,"references":8957},"x7968":{"content":1793,"definition":1791,"references":3894},"x7970":{"content":7952,"definition":7950,"references":9454},"x7972":{"content":7611,"definition":7609,"references":9309},"x7974":{"content":3055,"definition":3053,"references":4400},"x7979":{"content":7981,"references":9472},"x7983":{"content":5542,"definition":5532,"references":8358},"x7985":{"content":5973,"definition":5971,"references":8451},"x7987":{"content":7964,"definition":7962,"references":9464},"x7992":{"content":7994,"references":9478},"x7996":{"content":7952,"definition":7950,"references":9454},"x7998":{"content":7611,"definition":7609,"references":9309},"x8010":{"content":8008,"definition":8006,"references":9481},"x8015":{"references":9484},"x8017":{"content":6001,"definition":5999,"references":8463},"x8019":{"content":7952,"definition":7950,"references":9454},"x8024":{"content":8026,"references":9490},"x8031":{"references":9494},"x8033":{"content":6787,"definition":6785,"references":8922},"x8035":{"content":207,"definition":205,"references":408},"x8037":{"content":6787,"definition":6785,"references":8922},"x8039":{"content":5660,"definition":251,"references":439},"x8044":{"content":8046,"references":9500},"x8048":{"content":7941,"definition":7939,"references":9447},"x8050":{"content":1929,"definition":1927,"references":3975},"x8055":{"content":8057,"references":9507},"x8062":{"references":9511},"x8067":{"content":8069,"references":9517},"x8071":{"content":5562,"definition":719,"references":1158},"x8073":{"content":8057,"definition":8055,"references":9507},"x8075":{"content":8026,"definition":8024,"references":9490},"x8077":{"content":8057,"definition":8055,"references":9507},"x8079":{"content":7618,"definition":7616,"references":9316},"x8081":{"content":8057,"definition":8055,"references":9507},"x8086":{"content":8088,"references":9523},"x8093":{"references":9526},"x8095":{"content":6787,"definition":6785,"references":8922},"x8097":{"content":207,"definition":205,"references":408},"x8099":{"content":6787,"definition":6785,"references":8922},"x8101":{"content":5660,"definition":251,"references":439},"x8106":{"content":8108,"references":9532},"x8110":{"content":8046,"definition":8044,"references":9500},"x8112":{"content":1929,"definition":1927,"references":3975},"x8117":{"content":8119,"references":9539},"x8124":{"content":8126,"references":9546},"x8131":{"content":8133,"references":9552},"x8138":{"references":9555},"x8143":{"content":8145,"references":9561},"x8147":{"content":6816,"definition":6814,"references":8943},"x8149":{"content":8119,"definition":8117,"references":9539},"x8151":{"content":3055,"definition":3053,"references":4400},"x8156":{"content":8158,"references":9568},"x8160":{"content":8145,"definition":8143,"references":9561},"x8162":{"content":1887,"definition":1885,"references":3959},"x8167":{"content":8169,"references":9575},"x8171":{"content":8158,"definition":8156,"references":9568},"x8173":{"content":5029,"definition":5027,"references":5236},"x8178":{"content":8180,"references":9581},"x8182":{"content":8158,"definition":8156,"references":9568},"x8184":{"content":3695,"definition":3693,"references":4713},"x8189":{"content":8191,"references":9589},"x8193":{"content":6846,"definition":6844,"references":8971},"x8195":{"content":5394,"definition":5392,"references":5463},"x8200":{"content":8202,"references":9596},"x8207":{"content":8209,"references":9602},"x8214":{"content":8216,"references":9608},"x8218":{"content":6022,"definition":6020,"references":8478},"x8220":{"content":6855,"definition":6853,"references":8978},"x8222":{"content":8145,"definition":8143,"references":9561},"x8227":{"content":8229,"references":9614},"x8231":{"content":6766,"definition":6764,"references":8905},"x8233":{"content":6766,"definition":6764,"references":8905},"x8238":{"content":8240,"references":9620},"x8252":{"content":8250,"definition":8248,"references":9623},"x8254":{"content":8180,"definition":8178,"references":9581},"x8259":{"references":9626},"x8264":{"content":8266,"references":9632},"x8271":{"content":8273,"references":9638},"x8278":{"content":8280,"references":9644},"x8285":{"references":9647},"x8287":{"content":6787,"definition":6785,"references":8922},"x8289":{"content":207,"definition":205,"references":408},"x8291":{"content":6787,"definition":6785,"references":8922},"x8293":{"content":5660,"definition":251,"references":439},"x8295":{"content":2979,"definition":2977,"references":4377},"x8297":{"content":2996,"definition":2994,"references":4380},"x8299":{"content":8108,"definition":8106,"references":9532},"x8301":{"content":1929,"definition":1927,"references":3975},"x8306":{"content":8308,"references":9653},"x8313":{"content":8315,"references":9660},"x8320":{"content":8322,"references":9667},"x8327":{"references":9671},"x8329":{"content":5578,"definition":600,"references":1078},"x8331":{"content":8308,"definition":8306,"references":9653},"x8333":{"content":8315,"definition":8313,"references":9660},"x8335":{"content":5578,"definition":600,"references":1078},"x8337":{"content":8308,"definition":8306,"references":9653},"x8339":{"content":8322,"definition":8320,"references":9667},"x8341":{"content":6787,"definition":6785,"references":8922},"x8343":{"content":207,"definition":205,"references":408}},"data":{"183":"debug/bench.ts.html#1","205":"debug/bench.ts.html#4","207":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">end</span>: <span class=\"hljs-function\">() =&gt;</span> <span class=\"hljs-built_in\">void</span>\n</code></pre>\n","251":"debug/bench.ts.html#9","505":"util.ts.html#1","534":"node_modules/@types/node/path.d.ts.html#18","536":"<pre><code class=\"language-typescript\"><span class=\"hljs-variable language_\">module</span> <span class=\"hljs-string\">&quot;path&quot;</span>\n</code></pre>\n<hr>\n<p>The <code>path</code> module provides utilities for working with file and directory paths.\nIt can be accessed using:</p>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">const</span> path = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;path&#x27;</span>);\n</code></pre>\n","588":"node_modules/@types/node/fs/promises.d.ts.html#11","590":"<pre><code class=\"language-typescript\"><span class=\"hljs-variable language_\">module</span> <span class=\"hljs-string\">&quot;fs/promises&quot;</span>\n</code></pre>\n<hr>\n<p>The <code>fs/promises</code> API provides asynchronous file system methods that return\npromises.</p>\n<p>The promise APIs use the underlying Node.js threadpool to perform file\nsystem operations off the event loop thread. These operations are not\nsynchronized or threadsafe. Care must be taken when performing multiple\nconcurrent modifications on the same file or data corruption may occur.</p>\n","600":"util.ts.html#4","662":"util.ts.html#10","719":"util.ts.html#18","838":"node_modules/typescript-lsif/lib/lib.es5.d.ts.html#1355","840":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">Array</span>&lt;T&gt;.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-attr\">callbackfn</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">value: T, index: <span class=\"hljs-built_in\">number</span>, array: T[]</span>) =&gt;</span> <span class=\"hljs-built_in\">void</span>, thisArg?: <span class=\"hljs-built_in\">any</span>): <span class=\"hljs-built_in\">void</span>\n</code></pre>\n<hr>\n<p>Performs the specified action for each element in an array.</p>\n","1323":"paths.ts.html#1","1331":"node_modules/@types/node/path.d.ts.html#81","1383":"paths.ts.html#3","1446":"lsif.ts.html#1","1454":"node_modules/@types/node/fs/promises.d.ts.html#854","1545":"node_modules/lsif-protocol/lib/protocol.d.ts.html#5","1563":"node_modules/lsif-protocol/lib/protocol.d.ts.html#307","1601":"node_modules/lsif-protocol/lib/main.d.ts.html#1","1618":"lsif.ts.html#4","1650":"lsif.ts.html#7","1652":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">get</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">x: A</span>) =&gt;</span> B\n</code></pre>\n","1702":"lsif.ts.html#11","1724":"lsif.ts.html#13","1726":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">item</span>: <span class=\"hljs-title class_\">SafeMap</span>&lt;<span class=\"hljs-title class_\">Id</span>, <span class=\"hljs-title class_\">Element</span>&gt;\n</code></pre>\n","1740":"lsif.ts.html#14","1742":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">inV</span>: <span class=\"hljs-title class_\">SafeMap</span>&lt;<span class=\"hljs-title class_\">Id</span>, <span class=\"hljs-title class_\">Element</span>[]&gt;\n</code></pre>\n","1791":"lsif.ts.html#18","1793":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">raw</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">x: <span class=\"hljs-built_in\">string</span></span>) =&gt;</span> <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","1837":"lsif.ts.html#21","1839":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">uriPath</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">x: <span class=\"hljs-built_in\">string</span></span>) =&gt;</span> <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","1885":"node_modules/typescript-lsif/lib/lib.es5.d.ts.html#475","1887":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">String</span>.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-attr\">separator</span>: <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-title class_\">RegExp</span>, limit?: <span class=\"hljs-built_in\">number</span> | <span class=\"hljs-literal\">undefined</span>): <span class=\"hljs-built_in\">string</span>[] (+<span class=\"hljs-number\">1</span> overload)\n</code></pre>\n<hr>\n<p>Split a string into substrings using the specified separator and return them as an array.</p>\n","1899":"node_modules/typescript-lsif/lib/lib.es5.d.ts.html#1367","1901":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">Array</span>&lt;T&gt;.<span class=\"hljs-property\">filter</span>&lt;S <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">T</span>&gt;(<span class=\"hljs-attr\">predicate</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">value: T, index: <span class=\"hljs-built_in\">number</span>, array: T[]</span>) =&gt;</span> value is S, thisArg?: <span class=\"hljs-built_in\">any</span>): S[] (+<span class=\"hljs-number\">1</span> overload)\n</code></pre>\n<hr>\n<p>Returns the elements of an array that meet the condition specified in a callback function.</p>\n","1927":"node_modules/typescript-lsif/lib/lib.es5.d.ts.html#1361","1929":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">Array</span>&lt;T&gt;.<span class=\"hljs-property\">map</span>&lt;U&gt;(<span class=\"hljs-attr\">callbackfn</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">value: T, index: <span class=\"hljs-built_in\">number</span>, array: T[]</span>) =&gt;</span> U, thisArg?: <span class=\"hljs-built_in\">any</span>): U[]\n</code></pre>\n<hr>\n<p>Calls a defined callback function on each element of an array, and returns an array that contains the results.</p>\n","1948":"node_modules/typescript-lsif/lib/lib.es5.d.ts.html#1052","1950":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">interface</span> JSON\n</code></pre>\n<hr>\n<p>An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.</p>\n","2434":"node_modules/lsif-protocol/lib/protocol.d.ts.html#10","2436":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-title class_\">Element</span>.<span class=\"hljs-property\">id</span>: <span class=\"hljs-title class_\">Id</span>\n</code></pre>\n","2569":"node_modules/typescript-lsif/lib/lib.es5.d.ts.html#1242","2571":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">Array</span>&lt;T&gt;.<span class=\"hljs-title function_\">push</span>(...<span class=\"hljs-attr\">items</span>: T[]): <span class=\"hljs-built_in\">number</span>\n</code></pre>\n<hr>\n<p>Appends new elements to the end of an array, and returns the new length of the array.</p>\n","2741":"node_modules/lsif-protocol/lib/protocol.d.ts.html#567","2743":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-variable constant_\">E1N</span>&lt;S <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">V</span>, T <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">V</span>, K <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">EdgeLabels</span>&gt;.<span class=\"hljs-property\">outV</span>: <span class=\"hljs-title class_\">Id</span>\n</code></pre>\n<hr>\n<p>The id of the from vertex.</p>\n","2880":"node_modules/typescript-lsif/lib/lib.es5.d.ts.html#972","2882":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">interface</span> Error\n</code></pre>\n","2977":"node_modules/typescript-lsif/lib/lib.es5.d.ts.html#1446","2979":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">interface</span> Promise&lt;T&gt;\n</code></pre>\n<hr>\n<p>Represents the completion of an asynchronous operation</p>\n","2994":"node_modules/typescript-lsif/lib/lib.es2015.iterable.d.ts.html#226","2996":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">PromiseConstructor</span>.<span class=\"hljs-property\">all</span>&lt;T&gt;(<span class=\"hljs-attr\">values</span>: <span class=\"hljs-title class_\">Iterable</span>&lt;T | <span class=\"hljs-title class_\">PromiseLike</span>&lt;T&gt;&gt;): <span class=\"hljs-title class_\">Promise</span>&lt;T[]&gt; (+<span class=\"hljs-number\">10</span> overloads)\n</code></pre>\n<hr>\n<p>Creates a Promise that is resolved with an array of results when all of the provided Promises\nresolve, or rejected when any Promise is rejected.</p>\n","3053":"node_modules/lsif-protocol/lib/protocol.d.ts.html#315","3055":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-title class_\">Document</span>.<span class=\"hljs-property\">uri</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n<hr>\n<p>The Uri of the document.</p>\n","3091":"node_modules/@types/node/buffer.d.ts.html#602","3093":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">Buffer</span>.<span class=\"hljs-title function_\">toString</span>(encoding?: <span class=\"hljs-title class_\">BufferEncoding</span> | <span class=\"hljs-literal\">undefined</span>, start?: <span class=\"hljs-built_in\">number</span> | <span class=\"hljs-literal\">undefined</span>, end?: <span class=\"hljs-built_in\">number</span> | <span class=\"hljs-literal\">undefined</span>): <span class=\"hljs-built_in\">string</span>\n</code></pre>\n<hr>\n<p>Decodes <code>buf</code> to a string according to the specified character encoding in<code>encoding</code>. <code>start</code> and <code>end</code> may be passed to decode only a subset of <code>buf</code>.</p>\n<p>If <code>encoding</code> is <code>'utf8'</code> and a byte sequence in the input is not valid UTF-8,\nthen each invalid byte is replaced with the replacement character <code>U+FFFD</code>.</p>\n<p>The maximum length of a string instance (in UTF-16 code units) is available\nas {@link constants.MAX_STRING_LENGTH}.</p>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Buffer</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;buffer&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> buf1 = <span class=\"hljs-title class_\">Buffer</span>.<span class=\"hljs-title function_\">allocUnsafe</span>(<span class=\"hljs-number\">26</span>);\n\n<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">26</span>; i++) {\n  <span class=\"hljs-comment\">// 97 is the decimal ASCII value for &#x27;a&#x27;.</span>\n  buf1[i] = i + <span class=\"hljs-number\">97</span>;\n}\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(buf1.<span class=\"hljs-title function_\">toString</span>(<span class=\"hljs-string\">&#x27;utf8&#x27;</span>));\n<span class=\"hljs-comment\">// Prints: abcdefghijklmnopqrstuvwxyz</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(buf1.<span class=\"hljs-title function_\">toString</span>(<span class=\"hljs-string\">&#x27;utf8&#x27;</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">5</span>));\n<span class=\"hljs-comment\">// Prints: abcde</span>\n\n<span class=\"hljs-keyword\">const</span> buf2 = <span class=\"hljs-title class_\">Buffer</span>.<span class=\"hljs-title function_\">from</span>(<span class=\"hljs-string\">&#x27;tést&#x27;</span>);\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(buf2.<span class=\"hljs-title function_\">toString</span>(<span class=\"hljs-string\">&#x27;hex&#x27;</span>));\n<span class=\"hljs-comment\">// Prints: 74c3a97374</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(buf2.<span class=\"hljs-title function_\">toString</span>(<span class=\"hljs-string\">&#x27;utf8&#x27;</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">3</span>));\n<span class=\"hljs-comment\">// Prints: té</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(buf2.<span class=\"hljs-title function_\">toString</span>(<span class=\"hljs-literal\">undefined</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">3</span>));\n<span class=\"hljs-comment\">// Prints: té</span>\n</code></pre>\n","3379":"lsif.ts.html#123","3587":"lsif.ts.html#138","3693":"node_modules/typescript-lsif/lib/lib.es5.d.ts.html#1224","3695":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-title class_\">Array</span>&lt;T&gt;.<span class=\"hljs-property\">length</span>: <span class=\"hljs-built_in\">number</span>\n</code></pre>\n<hr>\n<p>Gets or sets the length of the array. This is a number one higher than the highest index in the array.</p>\n","4736":"tree.ts.html#1","4744":"tree.ts.html#1","4754":"tree.ts.html#1","4756":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","4782":"tree.ts.html#3","4784":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">children</span>: <span class=\"hljs-title class_\">TreeNode</span>[]\n</code></pre>\n","4820":"tree.ts.html#8","5027":"node_modules/typescript-lsif/lib/lib.es5.d.ts.html#1279","5029":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">Array</span>&lt;T&gt;.<span class=\"hljs-title function_\">slice</span>(start?: <span class=\"hljs-built_in\">number</span> | <span class=\"hljs-literal\">undefined</span>, end?: <span class=\"hljs-built_in\">number</span> | <span class=\"hljs-literal\">undefined</span>): T[]\n</code></pre>\n<hr>\n<p>Returns a copy of a section of an array.\nFor both start and end, a negative index can be used to indicate an offset from the end of the array.\nFor example, -2 refers to the second to last element of the array.</p>\n","5263":"templates/index.ts.html#1","5380":"templates/index.ts.html#10","5392":"templates/index.ts.html#12","5394":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">source</span>: ejs.<span class=\"hljs-property\">TemplateFunction</span>\n</code></pre>\n","5401":"templates/index.ts.html#13","5403":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">welcome</span>: ejs.<span class=\"hljs-property\">TemplateFunction</span>\n</code></pre>\n","5491":"node_modules/@types/node/fs/promises.d.ts.html#430","5501":"<pre><code class=\"language-typescript\">(alias) <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">rm</span>(<span class=\"hljs-params\">path: PathLike, options?: RmOptions | <span class=\"hljs-literal\">undefined</span></span>): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-built_in\">void</span>&gt;\n<span class=\"hljs-keyword\">import</span> rm\n</code></pre>\n<hr>\n<p>Removes files and directories (modeled on the standard POSIX <code>rm</code> utility).</p>\n","5509":"<pre><code class=\"language-typescript\">(alias) <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">readFile</span>(<span class=\"hljs-params\">path: PathLike | FileHandle, options?: ({\n    encoding?: <span class=\"hljs-literal\">null</span> | <span class=\"hljs-literal\">undefined</span>;\n    flag?: OpenMode | <span class=\"hljs-literal\">undefined</span>;\n} &amp; Abortable) | <span class=\"hljs-literal\">null</span> | <span class=\"hljs-literal\">undefined</span></span>): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">Buffer</span>&gt; (+<span class=\"hljs-number\">2</span> overloads)\n<span class=\"hljs-keyword\">import</span> readFile\n</code></pre>\n<hr>\n<p>Asynchronously reads the entire contents of a file.</p>\n<p>If no encoding is specified (using <code>options.encoding</code>), the data is returned\nas a <code>Buffer</code> object. Otherwise, the data will be a string.</p>\n<p>If <code>options</code> is a string, then it specifies the encoding.</p>\n<p>When the <code>path</code> is a directory, the behavior of <code>fsPromises.readFile()</code> is\nplatform-specific. On macOS, Linux, and Windows, the promise will be rejected\nwith an error. On FreeBSD, a representation of the directory's contents will be\nreturned.</p>\n<p>It is possible to abort an ongoing <code>readFile</code> using an <code>AbortSignal</code>. If a\nrequest is aborted the promise returned is rejected with an <code>AbortError</code>:</p>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">import</span> { readFile } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;fs/promises&#x27;</span>;\n\n<span class=\"hljs-keyword\">try</span> {\n  <span class=\"hljs-keyword\">const</span> controller = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">AbortController</span>();\n  <span class=\"hljs-keyword\">const</span> { signal } = controller;\n  <span class=\"hljs-keyword\">const</span> promise = <span class=\"hljs-title function_\">readFile</span>(fileName, { signal });\n\n  <span class=\"hljs-comment\">// Abort the request before the promise settles.</span>\n  controller.<span class=\"hljs-title function_\">abort</span>();\n\n  <span class=\"hljs-keyword\">await</span> promise;\n} <span class=\"hljs-keyword\">catch</span> (err) {\n  <span class=\"hljs-comment\">// When a request is aborted - err is an AbortError</span>\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(err);\n}\n</code></pre>\n<p>Aborting an ongoing request does not abort individual operating\nsystem requests but rather the internal buffering <code>fs.readFile</code> performs.</p>\n<p>Any specified <code>FileHandle</code> has to support reading.</p>\n","5519":"<pre><code class=\"language-typescript\">(alias) (method) <span class=\"hljs-title function_\">join</span>(...<span class=\"hljs-attr\">paths</span>: <span class=\"hljs-built_in\">string</span>[]): <span class=\"hljs-built_in\">string</span>\n<span class=\"hljs-keyword\">import</span> join\n</code></pre>\n<hr>\n<p>Join all arguments together and normalize the resulting path.\nArguments must be strings. In v0.8, non-string arguments were silently ignored. In v0.10 and up, an exception is thrown.</p>\n","5532":"node_modules/highlight.js/types/index.d.ts.html#244","5542":"<pre><code class=\"language-typescript\">(alias) <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">hljs</span>: HLJSApi\n<span class=\"hljs-keyword\">import</span> hljs\n</code></pre>\n","5550":"node_modules/highlight.js/types/index.d.ts.html#16","5552":"<pre><code class=\"language-typescript\"><span class=\"hljs-variable language_\">module</span> <span class=\"hljs-string\">&quot;highlight.js&quot;</span>\n</code></pre>\n","5562":"<pre><code class=\"language-typescript\">(alias) <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">putInSrc</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">highlight: <span class=\"hljs-built_in\">string</span>, additions: Addition[]</span>) =&gt;</span> <span class=\"hljs-built_in\">string</span>\n<span class=\"hljs-keyword\">import</span> putInSrc\n</code></pre>\n","5570":"<pre><code class=\"language-typescript\">(alias) <span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">Addition</span> = {\n    <span class=\"hljs-attr\">position</span>: {\n        <span class=\"hljs-attr\">line</span>: <span class=\"hljs-built_in\">number</span>;\n        <span class=\"hljs-attr\">character</span>: <span class=\"hljs-built_in\">number</span>;\n    };\n    <span class=\"hljs-attr\">text</span>: <span class=\"hljs-built_in\">string</span>;\n}\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Addition</span>\n</code></pre>\n","5578":"<pre><code class=\"language-typescript\">(alias) <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">myWriteFile</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">path: <span class=\"hljs-built_in\">string</span>, content: <span class=\"hljs-built_in\">string</span></span>) =&gt;</span> <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-built_in\">void</span>&gt;\n<span class=\"hljs-keyword\">import</span> myWriteFile\n</code></pre>\n","5588":"<pre><code class=\"language-typescript\">(alias) <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">distFolder</span>: <span class=\"hljs-built_in\">string</span>\n<span class=\"hljs-keyword\">import</span> distFolder\n</code></pre>\n","5598":"<pre><code class=\"language-typescript\">(alias) <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">lsifParser</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">address: <span class=\"hljs-built_in\">string</span>, uriMapAddress: <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-literal\">undefined</span></span>) =&gt;</span> <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">Lsif</span>&gt;\n<span class=\"hljs-keyword\">import</span> lsifParser\n</code></pre>\n","5606":"<pre><code class=\"language-typescript\">(alias) <span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">Lsif</span> = {\n    <span class=\"hljs-attr\">items</span>: <span class=\"hljs-title class_\">Element</span>[];\n    <span class=\"hljs-attr\">item</span>: <span class=\"hljs-title class_\">SafeMap</span>&lt;<span class=\"hljs-title class_\">Id</span>, <span class=\"hljs-title class_\">Element</span>&gt;;\n    <span class=\"hljs-attr\">inV</span>: <span class=\"hljs-title class_\">SafeMap</span>&lt;<span class=\"hljs-title class_\">Id</span>, <span class=\"hljs-title class_\">Element</span>[]&gt;;\n    <span class=\"hljs-attr\">outV</span>: <span class=\"hljs-title class_\">SafeMap</span>&lt;<span class=\"hljs-title class_\">Id</span>, <span class=\"hljs-title class_\">Element</span>[]&gt;;\n    <span class=\"hljs-attr\">documents</span>: <span class=\"hljs-title class_\">Document</span>[];\n    <span class=\"hljs-attr\">srcMap</span>: {\n        <span class=\"hljs-attr\">raw</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">x: <span class=\"hljs-built_in\">string</span></span>) =&gt;</span> <span class=\"hljs-built_in\">string</span>;\n        <span class=\"hljs-attr\">lineSplitted</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">x: <span class=\"hljs-built_in\">string</span></span>) =&gt;</span> <span class=\"hljs-built_in\">string</span>[];\n    };\n    <span class=\"hljs-attr\">uriPath</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">x: <span class=\"hljs-built_in\">string</span></span>) =&gt;</span> <span class=\"hljs-built_in\">string</span>;\n}\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Lsif</span>\n</code></pre>\n","5614":"<pre><code class=\"language-typescript\">(alias) <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">findRecursiveEdge</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">lsif: Lsif, v: Id, label: <span class=\"hljs-built_in\">string</span></span>) =&gt;</span> <span class=\"hljs-title class_\">Element</span> | <span class=\"hljs-literal\">undefined</span>\n<span class=\"hljs-keyword\">import</span> findRecursiveEdge\n</code></pre>\n","5622":"<pre><code class=\"language-typescript\">(alias) <span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">Element</span> = <span class=\"hljs-title class_\">Vertex</span> | <span class=\"hljs-title class_\">Edge</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Element</span>\n</code></pre>\n","5632":"<pre><code class=\"language-typescript\">(alias) <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">buildTree</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">list: <span class=\"hljs-built_in\">string</span>[]</span>) =&gt;</span> <span class=\"hljs-title class_\">TreeNode</span>[]\n<span class=\"hljs-keyword\">import</span> buildTree\n</code></pre>\n","5640":"<pre><code class=\"language-typescript\">(alias) <span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">TreeNode</span> = {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span>;\n} &amp; ({\n    <span class=\"hljs-attr\">kind</span>: <span class=\"hljs-string\">&#x27;folder&#x27;</span>;\n    <span class=\"hljs-attr\">children</span>: <span class=\"hljs-title class_\">TreeNode</span>[];\n} | {\n    <span class=\"hljs-attr\">kind</span>: <span class=\"hljs-string\">&#x27;file&#x27;</span>;\n})\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">TreeNode</span>\n</code></pre>\n","5650":"<pre><code class=\"language-typescript\">(alias) <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">templatesBuilder</span>: <span class=\"hljs-function\">() =&gt;</span> <span class=\"hljs-title class_\">Promise</span>&lt;{\n    <span class=\"hljs-attr\">source</span>: ejs.<span class=\"hljs-property\">TemplateFunction</span>;\n    <span class=\"hljs-attr\">welcome</span>: ejs.<span class=\"hljs-property\">TemplateFunction</span>;\n}&gt;\n<span class=\"hljs-keyword\">import</span> templatesBuilder\n</code></pre>\n","5660":"<pre><code class=\"language-typescript\">(alias) <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">start</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">text: <span class=\"hljs-built_in\">string</span>, force?: <span class=\"hljs-built_in\">boolean</span></span>) =&gt;</span> <span class=\"hljs-title class_\">Bench</span>\n<span class=\"hljs-keyword\">import</span> start\n</code></pre>\n","5678":"node_modules/@types/markdown-it/lib/index.d.ts.html#13","5692":"<pre><code class=\"language-typescript\">(alias) <span class=\"hljs-keyword\">interface</span> MarkdownIt\n(alias) namespace MarkdownIt\n(alias) const MarkdownIt: MarkdownItConstructor\nimport MarkdownIt\n</code></pre>\n<hr>\n<p>Main parser/renderer class.</p>\n<h5>Usage</h5>\n<pre><code class=\"language-javascript\"><span class=\"hljs-comment\">// node.js, &quot;classic&quot; way:</span>\n<span class=\"hljs-keyword\">var</span> <span class=\"hljs-title class_\">MarkdownIt</span> = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;markdown-it&#x27;</span>),\n    md = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">MarkdownIt</span>();\n<span class=\"hljs-keyword\">var</span> result = md.<span class=\"hljs-title function_\">render</span>(<span class=\"hljs-string\">&#x27;# markdown-it rulezz!&#x27;</span>);\n\n<span class=\"hljs-comment\">// node.js, the same, but with sugar:</span>\n<span class=\"hljs-keyword\">var</span> md = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;markdown-it&#x27;</span>)();\n<span class=\"hljs-keyword\">var</span> result = md.<span class=\"hljs-title function_\">render</span>(<span class=\"hljs-string\">&#x27;# markdown-it rulezz!&#x27;</span>);\n\n<span class=\"hljs-comment\">// browser without AMD, added to &quot;window&quot; on script load</span>\n<span class=\"hljs-comment\">// Note, there are no dash.</span>\n<span class=\"hljs-keyword\">var</span> md = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-title function_\">markdownit</span>();\n<span class=\"hljs-keyword\">var</span> result = md.<span class=\"hljs-title function_\">render</span>(<span class=\"hljs-string\">&#x27;# markdown-it rulezz!&#x27;</span>);\n</code></pre>\n<p>Single line rendering, without paragraph wrap:</p>\n<pre><code class=\"language-javascript\"><span class=\"hljs-keyword\">var</span> md = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;markdown-it&#x27;</span>)();\n<span class=\"hljs-keyword\">var</span> result = md.<span class=\"hljs-title function_\">renderInline</span>(<span class=\"hljs-string\">&#x27;__markdown-it__ rulezz!&#x27;</span>);\n</code></pre>\n<h5>Example</h5>\n<pre><code class=\"language-javascript\"><span class=\"hljs-comment\">// commonmark mode</span>\n<span class=\"hljs-keyword\">var</span> md = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;markdown-it&#x27;</span>)(<span class=\"hljs-string\">&#x27;commonmark&#x27;</span>);\n\n<span class=\"hljs-comment\">// default mode</span>\n<span class=\"hljs-keyword\">var</span> md = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;markdown-it&#x27;</span>)();\n\n<span class=\"hljs-comment\">// enable everything</span>\n<span class=\"hljs-keyword\">var</span> md = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;markdown-it&#x27;</span>)({\n  <span class=\"hljs-attr\">html</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">linkify</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">typographer</span>: <span class=\"hljs-literal\">true</span>\n});\n</code></pre>\n<h5>Syntax highlighting</h5>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">var</span> hljs = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;highlight.js&#x27;</span>) <span class=\"hljs-comment\">// https://highlightjs.org/</span>\n\n<span class=\"hljs-keyword\">var</span> md = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;markdown-it&#x27;</span>)({\n  <span class=\"hljs-attr\">highlight</span>: <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">str, lang</span>) {\n    <span class=\"hljs-keyword\">if</span> (lang &amp;&amp; hljs.<span class=\"hljs-title function_\">getLanguage</span>(lang)) {\n      <span class=\"hljs-keyword\">try</span> {\n        <span class=\"hljs-keyword\">return</span> hljs.<span class=\"hljs-title function_\">highlight</span>(lang, str, <span class=\"hljs-literal\">true</span>).<span class=\"hljs-property\">value</span>;\n      } <span class=\"hljs-keyword\">catch</span> (__) {}\n    }\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;&#x27;</span>; <span class=\"hljs-comment\">// use external default escaping</span>\n  }\n});\n</code></pre>\n<p>Or with full wrapper override (if you need assign class to <code>&lt;pre&gt;</code>):</p>\n<pre><code class=\"language-javascript\"><span class=\"hljs-keyword\">var</span> hljs = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;highlight.js&#x27;</span>) <span class=\"hljs-comment\">// https://highlightjs.org/</span>\n\n<span class=\"hljs-comment\">// Actual default values</span>\n<span class=\"hljs-keyword\">var</span> md = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;markdown-it&#x27;</span>)({\n  <span class=\"hljs-attr\">highlight</span>: <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">str, lang</span>) {\n    <span class=\"hljs-keyword\">if</span> (lang &amp;&amp; hljs.<span class=\"hljs-title function_\">getLanguage</span>(lang)) {\n      <span class=\"hljs-keyword\">try</span> {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;&lt;pre class=&quot;hljs&quot;&gt;&lt;code&gt;&#x27;</span> +\n               hljs.<span class=\"hljs-title function_\">highlight</span>(lang, str, <span class=\"hljs-literal\">true</span>).<span class=\"hljs-property\">value</span> +\n               <span class=\"hljs-string\">&#x27;&lt;/code&gt;&lt;/pre&gt;&#x27;</span>;\n      } <span class=\"hljs-keyword\">catch</span> (__) {}\n    }\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;&lt;pre class=&quot;hljs&quot;&gt;&lt;code&gt;&#x27;</span> + md.<span class=\"hljs-property\">utils</span>.escapeHtml(str) + <span class=\"hljs-string\">&#x27;&lt;/code&gt;&lt;/pre&gt;&#x27;</span>;\n  }\n});\n</code></pre>\n","5702":"node_modules/@types/markdown-it/index.d.ts.html#1","5719":"node_modules/lsif-protocol/lib/protocol.d.ts.html#592","5729":"<pre><code class=\"language-typescript\">(alias) <span class=\"hljs-keyword\">type</span> contains = <span class=\"hljs-variable constant_\">E1N</span>&lt;<span class=\"hljs-title class_\">Project</span>, <span class=\"hljs-title class_\">Document</span>, <span class=\"hljs-title class_\">EdgeLabels</span>.<span class=\"hljs-property\">contains</span>&gt; | <span class=\"hljs-variable constant_\">E1N</span>&lt;<span class=\"hljs-title class_\">Document</span>, <span class=\"hljs-title class_\">Range</span>, <span class=\"hljs-title class_\">EdgeLabels</span>.<span class=\"hljs-property\">contains</span>&gt;\n<span class=\"hljs-keyword\">import</span> contains\n</code></pre>\n<hr>\n<p>An edge expressing containment relationship. The relationship exist between:</p>\n<ul>\n<li><code>Project</code> -&gt; <code>Document</code></li>\n<li><code>Package</code> -&gt; <code>Document</code></li>\n<li><code>Document</code> -&gt; <code>Range</code></li>\n</ul>\n","5737":"<pre><code class=\"language-typescript\">(alias) <span class=\"hljs-keyword\">interface</span> Document\nimport Document\n</code></pre>\n<hr>\n<p>A vertex representing a document in the project</p>\n","5745":"node_modules/lsif-protocol/lib/protocol.d.ts.html#606","5755":"<pre><code class=\"language-typescript\">(alias) <span class=\"hljs-keyword\">type</span> item = <span class=\"hljs-title class_\">ItemEdge</span>&lt;<span class=\"hljs-title class_\">DeclarationResult</span>, <span class=\"hljs-title class_\">Range</span>&gt; | <span class=\"hljs-title class_\">ItemEdge</span>&lt;<span class=\"hljs-title class_\">DefinitionResult</span>, <span class=\"hljs-title class_\">Range</span>&gt; | <span class=\"hljs-title class_\">ItemEdge</span>&lt;<span class=\"hljs-title class_\">TypeDefinitionResult</span>, <span class=\"hljs-title class_\">Range</span>&gt; | <span class=\"hljs-title class_\">ItemEdge</span>&lt;...&gt; | <span class=\"hljs-title class_\">ItemEdge</span>&lt;...&gt; | <span class=\"hljs-title class_\">ItemEdge</span>&lt;...&gt; | <span class=\"hljs-title class_\">ItemEdge</span>&lt;...&gt;\n<span class=\"hljs-keyword\">import</span> item\n</code></pre>\n<hr>\n<p>An edge representing a item in a result set. The relationship exists between:</p>\n<ul>\n<li><code>ReferenceResult</code> -&gt; <code>Range[]</code></li>\n<li><code>ReferenceResult</code> -&gt; <code>ReferenceResult[]</code></li>\n</ul>\n","5763":"node_modules/lsif-protocol/lib/protocol.d.ts.html#581","5773":"<pre><code class=\"language-typescript\">(alias) <span class=\"hljs-keyword\">interface</span> ItemEdge&lt;S <span class=\"hljs-keyword\">extends</span> V, T <span class=\"hljs-keyword\">extends</span> V&gt;\nimport ItemEdge\n</code></pre>\n","5781":"node_modules/lsif-protocol/lib/protocol.d.ts.html#488","5791":"<pre><code class=\"language-typescript\">(alias) <span class=\"hljs-keyword\">interface</span> ReferenceResult\nimport ReferenceResult\n</code></pre>\n<hr>\n<p>A vertex representing a reference result.</p>\n","5799":"node_modules/lsif-protocol/lib/protocol.d.ts.html#197","5809":"<pre><code class=\"language-typescript\">(alias) <span class=\"hljs-keyword\">interface</span> Range\nimport Range\n</code></pre>\n<hr>\n<p>A vertex representing a range inside a document.</p>\n","5817":"<pre><code class=\"language-typescript\">(alias) <span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">Id</span> = <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-built_in\">number</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Id</span>\n</code></pre>\n<hr>\n<p>An <code>Id</code> to identify a vertex or an edge.</p>\n","5825":"node_modules/lsif-protocol/lib/protocol.d.ts.html#508","5835":"<pre><code class=\"language-typescript\">(alias) <span class=\"hljs-keyword\">interface</span> HoverResult\nimport HoverResult\n</code></pre>\n<hr>\n<p>A vertex representing a Hover.</p>\n<p>Extends the <code>Hover</code> type defined in LSP.</p>\n","5856":"node_modules/vscode-languageserver-types/lib/umd/main.d.ts.html#1090","5868":"<pre><code class=\"language-typescript\">(alias) <span class=\"hljs-keyword\">interface</span> MarkupContent\n(alias) namespace MarkupContent\nimport MarkupContent\n</code></pre>\n<hr>\n<p>A <code>MarkupContent</code> literal represents a string value which content is interpreted base on its\nkind flag. Currently the protocol supports <code>plaintext</code> and <code>markdown</code> as markup kinds.</p>\n<p>If the kind is <code>markdown</code> then the value can contain fenced code blocks like in GitHub issues.\nSee https://help.github.com/articles/creating-and-highlighting-code-blocks/#syntax-highlighting</p>\n<p>Here is an example how such a string can be constructed using JavaScript / TypeScript:</p>\n<pre><code class=\"language-ts\"><span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">markdown</span>: <span class=\"hljs-title class_\">MarkdownContent</span> = {\n <span class=\"hljs-attr\">kind</span>: <span class=\"hljs-title class_\">MarkupKind</span>.<span class=\"hljs-property\">Markdown</span>,\n<span class=\"hljs-attr\">value</span>: [\n\t<span class=\"hljs-string\">&#x27;# Header&#x27;</span>,\n\t<span class=\"hljs-string\">&#x27;Some text&#x27;</span>,\n\t<span class=\"hljs-string\">&#x27;```typescript&#x27;</span>,\n\t<span class=\"hljs-string\">&#x27;someCode();&#x27;</span>,\n\t<span class=\"hljs-string\">&#x27;```&#x27;</span>\n].<span class=\"hljs-title function_\">join</span>(<span class=\"hljs-string\">&#x27;\\n&#x27;</span>)\n};\n</code></pre>\n<p><em>Please Note</em> that clients might sanitize the return markdown. A client could decide to\nremove HTML from the markdown to avoid script execution.</p>\n","5876":"node_modules/vscode-languageserver-types/lib/umd/main.d.ts.html#1416","5888":"<pre><code class=\"language-typescript\">(alias) <span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">MarkedString</span> = <span class=\"hljs-built_in\">string</span> | {\n    <span class=\"hljs-attr\">language</span>: <span class=\"hljs-built_in\">string</span>;\n    <span class=\"hljs-attr\">value</span>: <span class=\"hljs-built_in\">string</span>;\n}\n(alias) <span class=\"hljs-keyword\">namespace</span> MarkedString\nimport MarkedString\n</code></pre>\n<hr>\n<p>MarkedString can be used to render human readable text. It is either a markdown string\nor a code-block that provides a language and a code snippet. The language identifier\nis semantically equal to the optional language identifier in fenced code blocks in GitHub\nissues. See https://help.github.com/articles/creating-and-highlighting-code-blocks/#syntax-highlighting</p>\n<p>The pair of a language and a value is an equivalent to markdown:</p>\n<pre><code class=\"language-${language}\">${value}\n</code></pre>\n<p>Note that markdown strings will be sanitized - that means html will be escaped.</p>\n","5899":"node_modules/vscode-languageserver-protocol/lib/common/api.d.ts.html#1","5913":"index.ts.html#14","5915":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">markdown</span>: <span class=\"hljs-title class_\">MarkdownIt</span>\n</code></pre>\n","5924":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-title class_\">MarkdownIt</span>.<span class=\"hljs-property\">Options</span>.<span class=\"hljs-property\">highlight</span>?: (<span class=\"hljs-function\">(<span class=\"hljs-params\">str: <span class=\"hljs-built_in\">string</span>, lang: <span class=\"hljs-built_in\">string</span>, attrs: <span class=\"hljs-built_in\">string</span></span>) =&gt;</span> <span class=\"hljs-built_in\">string</span>) | <span class=\"hljs-literal\">null</span> | <span class=\"hljs-literal\">undefined</span>\n</code></pre>\n<hr>\n<p>Highlighter function for fenced code blocks.\nHighlighter <code>function (str, lang, attrs)</code> should return escaped HTML. It can\nalso return empty string if the source was not changed and should be escaped\nexternally. If result starts with &lt;pre... internal wrapper is skipped.</p>\n","5929":"index.ts.html#15","5931":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">str</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","5936":"index.ts.html#15","5938":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">lang</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","5955":"node_modules/highlight.js/types/index.d.ts.html#39","5957":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-title class_\">PublicApi</span>.<span class=\"hljs-property\">getLanguage</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">languageName: <span class=\"hljs-built_in\">string</span></span>) =&gt;</span> <span class=\"hljs-title class_\">Language</span> | <span class=\"hljs-literal\">undefined</span>\n</code></pre>\n","5971":"node_modules/highlight.js/types/index.d.ts.html#27","5973":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-title class_\">PublicApi</span>.<span class=\"hljs-property\">highlight</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">codeOrLanguageName: <span class=\"hljs-built_in\">string</span>, optionsOrCode: <span class=\"hljs-built_in\">string</span> | HighlightOptions, ignoreIllegals?: <span class=\"hljs-built_in\">boolean</span> | <span class=\"hljs-literal\">undefined</span></span>) =&gt;</span> <span class=\"hljs-title class_\">HighlightResult</span>\n</code></pre>\n","5984":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-title class_\">HighlightOptions</span>.<span class=\"hljs-property\">language</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","5999":"node_modules/highlight.js/types/index.d.ts.html#83","6001":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-title class_\">HighlightResult</span>.<span class=\"hljs-property\">value</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","6010":"<pre><code class=\"language-typescript\">(local <span class=\"hljs-keyword\">var</span>) <span class=\"hljs-attr\">_</span>: unknown\n</code></pre>\n","6020":"index.ts.html#26","6022":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">treeToHtml</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">tree: TreeNode[], uri: <span class=\"hljs-built_in\">string</span></span>) =&gt;</span> <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","6027":"index.ts.html#26","6029":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">tree</span>: <span class=\"hljs-title class_\">TreeNode</span>[]\n</code></pre>\n","6036":"index.ts.html#26","6038":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">uri</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","6048":"index.ts.html#27","6050":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">path</span>: <span class=\"hljs-built_in\">string</span>[]\n</code></pre>\n","6059":"index.ts.html#28","6061":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">f</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">t: TreeNode, p: <span class=\"hljs-built_in\">string</span>[], k: <span class=\"hljs-built_in\">string</span></span>) =&gt;</span> <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","6066":"index.ts.html#28","6068":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">t</span>: <span class=\"hljs-title class_\">TreeNode</span>\n</code></pre>\n","6075":"index.ts.html#28","6077":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">p</span>: <span class=\"hljs-built_in\">string</span>[]\n</code></pre>\n","6082":"index.ts.html#28","6084":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">k</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","6098":"index.ts.html#30","6100":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">c</span>: <span class=\"hljs-string\">&quot;&quot;</span> | <span class=\"hljs-string\">&quot; class=\\&quot;current-file\\&quot;&quot;</span>\n</code></pre>\n","6127":"index.ts.html#35","6129":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">g</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">x: TreeNode[], p: <span class=\"hljs-built_in\">string</span>[], k: <span class=\"hljs-built_in\">string</span></span>) =&gt;</span> <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","6156":"index.ts.html#35","6158":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">x</span>: <span class=\"hljs-title class_\">TreeNode</span>[]\n</code></pre>\n","6165":"index.ts.html#35","6167":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">p</span>: <span class=\"hljs-built_in\">string</span>[]\n</code></pre>\n","6172":"index.ts.html#35","6174":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">k</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","6188":"index.ts.html#35","6190":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">y</span>: <span class=\"hljs-title class_\">TreeNode</span>\n</code></pre>\n","6211":"node_modules/typescript-lsif/lib/lib.es5.d.ts.html#1259","6213":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">Array</span>&lt;T&gt;.<span class=\"hljs-title function_\">join</span>(separator?: <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-literal\">undefined</span>): <span class=\"hljs-built_in\">string</span>\n</code></pre>\n<hr>\n<p>Adds all the elements of an array into a string, separated by the specified separator string.</p>\n","6226":"index.ts.html#39","6228":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">ItemData</span> = <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","6233":"index.ts.html#41","6235":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">isContains</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">x: Element</span>) =&gt;</span> x is contains\n</code></pre>\n","6240":"index.ts.html#41","6242":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">x</span>: <span class=\"hljs-title class_\">Element</span>\n</code></pre>\n","6266":"index.ts.html#45","6268":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">getItemData</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">item: Range, lsif: Lsif</span>) =&gt;</span> <span class=\"hljs-title class_\">ItemData</span>\n</code></pre>\n","6273":"index.ts.html#45","6275":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">item</span>: <span class=\"hljs-title class_\">Range</span>\n</code></pre>\n","6282":"index.ts.html#45","6284":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">lsif</span>: <span class=\"hljs-title class_\">Lsif</span>\n</code></pre>\n","6298":"index.ts.html#46","6300":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">uri</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","6329":"index.ts.html#49","6331":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">path</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","6342":"index.ts.html#50","6344":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">url</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","6356":"node_modules/vscode-languageserver-types/lib/umd/main.d.ts.html#93","6358":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-title class_\">Range</span>.<span class=\"hljs-property\">start</span>: <span class=\"hljs-title class_\">Position</span>\n</code></pre>\n<hr>\n<p>The range's start position</p>\n","6368":"node_modules/vscode-languageserver-types/lib/umd/main.d.ts.html#49","6370":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-title class_\">Position</span>.<span class=\"hljs-property\">line</span>: <span class=\"hljs-built_in\">number</span>\n</code></pre>\n<hr>\n<p>Line position in a document (zero-based).</p>\n","6379":"index.ts.html#54","6381":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">Hovers</span> = {\n    [<span class=\"hljs-attr\">s</span>: <span class=\"hljs-built_in\">string</span>]: {\n        content?: <span class=\"hljs-title class_\">Id</span> | <span class=\"hljs-literal\">undefined</span>;\n        definition?: <span class=\"hljs-title class_\">Id</span> | <span class=\"hljs-literal\">undefined</span>;\n        references?: <span class=\"hljs-title class_\">Id</span> | <span class=\"hljs-literal\">undefined</span>;\n    };\n}\n</code></pre>\n","6388":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">s</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","6395":"<pre><code class=\"language-typescript\">(property) content?: <span class=\"hljs-title class_\">Id</span> | <span class=\"hljs-literal\">undefined</span>\n</code></pre>\n","6404":"<pre><code class=\"language-typescript\">(property) definition?: <span class=\"hljs-title class_\">Id</span> | <span class=\"hljs-literal\">undefined</span>\n</code></pre>\n","6413":"<pre><code class=\"language-typescript\">(property) references?: <span class=\"hljs-title class_\">Id</span> | <span class=\"hljs-literal\">undefined</span>\n</code></pre>\n","6435":"index.ts.html#62","6437":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">ObjString</span> = {\n    [<span class=\"hljs-attr\">s</span>: <span class=\"hljs-built_in\">string</span>]: <span class=\"hljs-title class_\">Id</span>;\n}\n</code></pre>\n","6444":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">s</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","6463":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">References</span> = {\n    [<span class=\"hljs-attr\">s</span>: <span class=\"hljs-built_in\">string</span>]: {\n        <span class=\"hljs-attr\">definitions</span>: <span class=\"hljs-title class_\">ItemData</span>[];\n        <span class=\"hljs-attr\">references</span>: <span class=\"hljs-title class_\">ItemData</span>[];\n    };\n}\n</code></pre>\n","6470":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">s</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","6477":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">definitions</span>: <span class=\"hljs-built_in\">string</span>[]\n</code></pre>\n","6486":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">references</span>: <span class=\"hljs-built_in\">string</span>[]\n</code></pre>\n","6508":"index.ts.html#73","6510":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">MainOptions</span> = {\n    <span class=\"hljs-attr\">input</span>: <span class=\"hljs-built_in\">string</span>;\n    <span class=\"hljs-attr\">output</span>: <span class=\"hljs-built_in\">string</span>;\n    dist?: <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-literal\">undefined</span>;\n    uriMap?: <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-literal\">undefined</span>;\n}\n</code></pre>\n","6517":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">input</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","6524":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">output</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","6531":"<pre><code class=\"language-typescript\">(property) dist?: <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-literal\">undefined</span>\n</code></pre>\n","6538":"<pre><code class=\"language-typescript\">(property) uriMap?: <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-literal\">undefined</span>\n</code></pre>\n","6548":"index.ts.html#80","6550":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">markedStringToHtml</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">x: MarkedString</span>) =&gt;</span> <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","6555":"index.ts.html#80","6557":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">x</span>: <span class=\"hljs-title class_\">MarkedString</span>\n</code></pre>\n","6578":"node_modules/vscode-languageserver-types/lib/umd/main.d.ts.html#1417","6580":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">language</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","6592":"node_modules/vscode-languageserver-types/lib/umd/main.d.ts.html#1418","6594":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">value</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","6604":"node_modules/typescript-lsif/lib/lib.es5.d.ts.html#498","6606":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">String</span>.<span class=\"hljs-title function_\">trim</span>(): <span class=\"hljs-built_in\">string</span>\n</code></pre>\n<hr>\n<p>Removes the leading and trailing white space and line terminator characters from a string.</p>\n","6613":"index.ts.html#87","6615":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">hoverToHtml</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">hover: MarkupContent | MarkedString | MarkedString[]</span>) =&gt;</span> <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","6620":"index.ts.html#87","6622":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">hover</span>: <span class=\"hljs-title class_\">MarkedString</span> | <span class=\"hljs-title class_\">MarkupContent</span> | <span class=\"hljs-title class_\">MarkedString</span>[]\n</code></pre>\n","6644":"node_modules/@types/markdown-it/lib/index.d.ts.html#298","6646":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">MarkdownIt</span>.<span class=\"hljs-title function_\">render</span>(<span class=\"hljs-attr\">src</span>: <span class=\"hljs-built_in\">string</span>, env?: <span class=\"hljs-built_in\">any</span>): <span class=\"hljs-built_in\">string</span>\n</code></pre>\n<hr>\n<p>Render markdown string into html. It does all magic for you :).</p>\n<p><code>env</code> can be used to inject additional metadata (<code>{}</code> by default).\nBut you will not need it with high probability. See also comment\nin [[MarkdownIt.parse]].</p>\n","6665":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">interface</span> Array&lt;T&gt;\n</code></pre>\n","6679":"node_modules/@types/node/globals.d.ts.html#89","6703":"node_modules/vscode-languageserver-types/lib/umd/main.d.ts.html#1094","6705":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-title class_\">MarkupContent</span>.<span class=\"hljs-property\">kind</span>: <span class=\"hljs-title class_\">MarkupKind</span>\n</code></pre>\n<hr>\n<p>The type of the Markup</p>\n","6721":"node_modules/vscode-languageserver-types/lib/umd/main.d.ts.html#1098","6723":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-title class_\">MarkupContent</span>.<span class=\"hljs-property\">value</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n<hr>\n<p>The content itself</p>\n","6745":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">main</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">{ input, output, dist, uriMap }: MainOptions</span>) =&gt;</span> <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-built_in\">void</span>&gt;\n</code></pre>\n","6750":"index.ts.html#103","6752":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">var</span> <span class=\"hljs-attr\">input</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","6757":"index.ts.html#103","6759":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">var</span> <span class=\"hljs-attr\">output</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","6764":"index.ts.html#103","6766":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">var</span> <span class=\"hljs-attr\">dist</span>: <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-literal\">undefined</span>\n</code></pre>\n","6771":"index.ts.html#103","6773":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">var</span> <span class=\"hljs-attr\">uriMap</span>: <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-literal\">undefined</span>\n</code></pre>\n","6785":"index.ts.html#104","6787":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">bench</span>: <span class=\"hljs-title class_\">Bench</span>\n</code></pre>\n","6794":"index.ts.html#105","6796":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">lsif</span>: <span class=\"hljs-title class_\">Lsif</span>\n</code></pre>\n","6807":"index.ts.html#106","6809":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">item</span>: <span class=\"hljs-title class_\">SafeMap</span>&lt;<span class=\"hljs-title class_\">Id</span>, <span class=\"hljs-title class_\">Element</span>&gt;\n</code></pre>\n","6814":"index.ts.html#106","6816":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">uriPath</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">x: <span class=\"hljs-built_in\">string</span></span>) =&gt;</span> <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","6821":"index.ts.html#106","6823":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">documents</span>: <span class=\"hljs-title class_\">Document</span>[]\n</code></pre>\n","6828":"index.ts.html#106","6830":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">srcMap</span>: {\n    <span class=\"hljs-attr\">raw</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">x: <span class=\"hljs-built_in\">string</span></span>) =&gt;</span> <span class=\"hljs-built_in\">string</span>;\n    <span class=\"hljs-attr\">lineSplitted</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">x: <span class=\"hljs-built_in\">string</span></span>) =&gt;</span> <span class=\"hljs-built_in\">string</span>[];\n}\n</code></pre>\n","6835":"index.ts.html#106","6837":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">outV</span>: <span class=\"hljs-title class_\">SafeMap</span>&lt;<span class=\"hljs-title class_\">Id</span>, <span class=\"hljs-title class_\">Element</span>[]&gt;\n</code></pre>\n","6844":"index.ts.html#107","6846":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">templates</span>: {\n    <span class=\"hljs-attr\">source</span>: <span class=\"hljs-title class_\">TemplateFunction</span>;\n    <span class=\"hljs-attr\">welcome</span>: <span class=\"hljs-title class_\">TemplateFunction</span>;\n}\n</code></pre>\n","6853":"index.ts.html#108","6855":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">fileTree</span>: <span class=\"hljs-title class_\">TreeNode</span>[]\n</code></pre>\n","6866":"index.ts.html#108","6868":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">x</span>: <span class=\"hljs-title class_\">Document</span>\n</code></pre>\n","6890":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-title class_\">RmOptions</span>.<span class=\"hljs-property\">recursive</span>?: <span class=\"hljs-built_in\">boolean</span> | <span class=\"hljs-literal\">undefined</span>\n</code></pre>\n<hr>\n<p>If <code>true</code>, perform a recursive directory removal. In\nrecursive mode, operations are retried on failure.</p>\n","6897":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-title class_\">RmOptions</span>.<span class=\"hljs-property\">force</span>?: <span class=\"hljs-built_in\">boolean</span> | <span class=\"hljs-literal\">undefined</span>\n</code></pre>\n<hr>\n<p>When <code>true</code>, exceptions will be ignored if <code>path</code> does not exist.</p>\n","6919":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">tree</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","6975":"index.ts.html#121","6977":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">refs</span>: <span class=\"hljs-title class_\">Set</span>&lt;<span class=\"hljs-title class_\">Id</span>&gt;\n</code></pre>\n","6982":"node_modules/typescript-lsif/lib/lib.es2015.collection.d.ts.html#58","6984":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">interface</span> Set&lt;T&gt;\n</code></pre>\n","7001":"index.ts.html#122","7003":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">lsifParsed</span>: {\n    <span class=\"hljs-attr\">destPath</span>: <span class=\"hljs-built_in\">string</span>;\n    <span class=\"hljs-attr\">doc</span>: <span class=\"hljs-title class_\">Document</span>;\n    <span class=\"hljs-attr\">additions</span>: <span class=\"hljs-title class_\">Addition</span>[];\n}[]\n</code></pre>\n","7016":"index.ts.html#123","7018":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">doc</span>: <span class=\"hljs-title class_\">Document</span>\n</code></pre>\n","7028":"index.ts.html#124","7030":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">additions</span>: <span class=\"hljs-title class_\">Addition</span>[]\n</code></pre>\n","7037":"index.ts.html#125","7039":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">hovers</span>: <span class=\"hljs-title class_\">Hovers</span>\n</code></pre>\n","7051":"index.ts.html#126","7053":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">data</span>: <span class=\"hljs-title class_\">ObjString</span>\n</code></pre>\n","7065":"index.ts.html#127","7067":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">setDataLazy</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">key: Id, lazy: () =&gt; <span class=\"hljs-built_in\">string</span></span>) =&gt;</span> <span class=\"hljs-built_in\">void</span>\n</code></pre>\n","7072":"index.ts.html#127","7074":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">key</span>: <span class=\"hljs-title class_\">Id</span>\n</code></pre>\n","7081":"index.ts.html#127","7083":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">lazy</span>: <span class=\"hljs-function\">() =&gt;</span> <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","7118":"index.ts.html#131","7120":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">edge</span>: <span class=\"hljs-title class_\">Element</span>\n</code></pre>\n","7132":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">path</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","7147":"index.ts.html#136","7149":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">id</span>: <span class=\"hljs-title class_\">Id</span>\n</code></pre>\n","7158":"index.ts.html#137","7160":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">v</span>: <span class=\"hljs-title class_\">Range</span>\n</code></pre>\n","7180":"node_modules/vscode-languageserver-types/lib/umd/main.d.ts.html#58","7182":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-title class_\">Position</span>.<span class=\"hljs-property\">character</span>: <span class=\"hljs-built_in\">number</span>\n</code></pre>\n<hr>\n<p>Character offset on a line in a document (zero-based). Assuming that the line is\nrepresented as a string, the <code>character</code> value represents the gap between the\n<code>character</code> and <code>character + 1</code>.</p>\n<p>If the character value is greater than the line length it defaults back to the\nline length.</p>\n","7194":"node_modules/vscode-languageserver-types/lib/umd/main.d.ts.html#97","7196":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-title class_\">Range</span>.<span class=\"hljs-property\">end</span>: <span class=\"hljs-title class_\">Position</span>\n</code></pre>\n<hr>\n<p>The range's end position.</p>\n","7217":"index.ts.html#141","7219":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">hoverContent</span>: <span class=\"hljs-title class_\">Id</span> | <span class=\"hljs-literal\">undefined</span>\n</code></pre>\n","7228":"index.ts.html#142","7230":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">definitionPlace</span>: <span class=\"hljs-title class_\">Id</span> | <span class=\"hljs-literal\">undefined</span>\n</code></pre>\n","7239":"index.ts.html#143","7241":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">ref</span>: <span class=\"hljs-built_in\">any</span>\n</code></pre>\n","7248":"index.ts.html#144","7250":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">defVertex</span>: <span class=\"hljs-title class_\">Element</span> | <span class=\"hljs-literal\">undefined</span>\n</code></pre>\n","7265":"index.ts.html#146","7267":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">defItemEdge</span>: item\n</code></pre>\n","7282":"index.ts.html#147","7284":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">defItem</span>: <span class=\"hljs-title class_\">Range</span>\n</code></pre>\n","7330":"index.ts.html#153","7332":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">hoverVertex</span>: <span class=\"hljs-title class_\">HoverResult</span> | <span class=\"hljs-literal\">undefined</span>\n</code></pre>\n","7367":"node_modules/lsif-protocol/lib/protocol.d.ts.html#516","7369":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-title class_\">HoverResult</span>.<span class=\"hljs-property\">result</span>: lsp.<span class=\"hljs-property\">Hover</span>\n</code></pre>\n<hr>\n<p>The hover result. This is the normal LSP hover result.</p>\n","7379":"node_modules/vscode-languageserver-types/lib/umd/main.d.ts.html#1439","7381":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-title class_\">Hover</span>.<span class=\"hljs-property\">contents</span>: <span class=\"hljs-title class_\">MarkedString</span> | <span class=\"hljs-title class_\">MarkupContent</span> | <span class=\"hljs-title class_\">MarkedString</span>[]\n</code></pre>\n<hr>\n<p>The hover's content</p>\n","7394":"index.ts.html#158","7396":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">refVertex</span>: <span class=\"hljs-title class_\">Element</span> | <span class=\"hljs-literal\">undefined</span>\n</code></pre>\n","7416":"node_modules/typescript-lsif/lib/lib.es2015.collection.d.ts.html#59","7418":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">Set</span>&lt;T&gt;.<span class=\"hljs-title function_\">add</span>(<span class=\"hljs-attr\">value</span>: T): <span class=\"hljs-variable language_\">this</span>\n</code></pre>\n","7449":"<pre><code class=\"language-typescript\">(property) content?: <span class=\"hljs-title class_\">Id</span> | <span class=\"hljs-literal\">undefined</span>\n</code></pre>\n","7458":"<pre><code class=\"language-typescript\">(property) definition?: <span class=\"hljs-title class_\">Id</span> | <span class=\"hljs-literal\">undefined</span>\n</code></pre>\n","7467":"<pre><code class=\"language-typescript\">(property) references?: <span class=\"hljs-title class_\">Id</span> | <span class=\"hljs-literal\">undefined</span>\n</code></pre>\n","7485":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">position</span>: {\n    <span class=\"hljs-attr\">line</span>: <span class=\"hljs-built_in\">number</span>;\n    <span class=\"hljs-attr\">character</span>: <span class=\"hljs-built_in\">number</span>;\n}\n</code></pre>\n","7496":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">text</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","7516":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">position</span>: {\n    <span class=\"hljs-attr\">line</span>: <span class=\"hljs-built_in\">number</span>;\n    <span class=\"hljs-attr\">character</span>: <span class=\"hljs-built_in\">number</span>;\n}\n</code></pre>\n","7527":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">text</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","7537":"index.ts.html#180","7539":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">relPath</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","7550":"index.ts.html#181","7552":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">destPath</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","7572":"node_modules/typescript-lsif/lib/lib.es5.d.ts.html#1066","7574":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-variable constant_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(<span class=\"hljs-attr\">value</span>: <span class=\"hljs-built_in\">any</span>, replacer?: (<span class=\"hljs-function\">(<span class=\"hljs-params\"><span class=\"hljs-variable language_\">this</span>: <span class=\"hljs-built_in\">any</span>, key: <span class=\"hljs-built_in\">string</span>, value: <span class=\"hljs-built_in\">any</span></span>) =&gt;</span> <span class=\"hljs-built_in\">any</span>) | <span class=\"hljs-literal\">undefined</span>, space?: <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-built_in\">number</span> | <span class=\"hljs-literal\">undefined</span>): <span class=\"hljs-built_in\">string</span> (+<span class=\"hljs-number\">1</span> overload)\n</code></pre>\n<hr>\n<p>Converts a JavaScript value to a JavaScript Object Notation (JSON) string.</p>\n","7585":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">hovers</span>: <span class=\"hljs-title class_\">Hovers</span>\n</code></pre>\n","7592":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">data</span>: <span class=\"hljs-title class_\">ObjString</span>\n</code></pre>\n","7604":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">destPath</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","7609":"index.ts.html#183","7611":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">doc</span>: <span class=\"hljs-title class_\">Document</span>\n</code></pre>\n","7616":"index.ts.html#183","7618":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">additions</span>: <span class=\"hljs-title class_\">Addition</span>[]\n</code></pre>\n","7636":"index.ts.html#187","7638":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">refFolder</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","7647":"index.ts.html#188","7649":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">id</span>: <span class=\"hljs-title class_\">Id</span>\n</code></pre>\n","7656":"index.ts.html#189","7658":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">edge</span>: <span class=\"hljs-title class_\">ItemEdge</span>&lt;<span class=\"hljs-title class_\">ReferenceResult</span>, <span class=\"hljs-title class_\">Range</span>&gt;[]\n</code></pre>\n","7675":"index.ts.html#190","7677":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">defEdge</span>: <span class=\"hljs-title class_\">ItemEdge</span>&lt;<span class=\"hljs-title class_\">ReferenceResult</span>, <span class=\"hljs-title class_\">Range</span>&gt;[]\n</code></pre>\n","7686":"index.ts.html#190","7688":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">x</span>: <span class=\"hljs-title class_\">ItemEdge</span>&lt;<span class=\"hljs-title class_\">ReferenceResult</span>, <span class=\"hljs-title class_\">Range</span>&gt;\n</code></pre>\n","7769":"index.ts.html#191","7771":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">refEdge</span>: <span class=\"hljs-title class_\">ItemEdge</span>&lt;<span class=\"hljs-title class_\">ReferenceResult</span>, <span class=\"hljs-title class_\">Range</span>&gt;[]\n</code></pre>\n","7780":"index.ts.html#191","7782":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">x</span>: <span class=\"hljs-title class_\">ItemEdge</span>&lt;<span class=\"hljs-title class_\">ReferenceResult</span>, <span class=\"hljs-title class_\">Range</span>&gt;\n</code></pre>\n","7808":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">definitions</span>: <span class=\"hljs-built_in\">string</span>[]\n</code></pre>\n","7818":"node_modules/typescript-lsif/lib/lib.es2019.array.d.ts.html#70","7820":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">Array</span>&lt;T&gt;.<span class=\"hljs-property\">flatMap</span>&lt;U, <span class=\"hljs-title class_\">This</span> = <span class=\"hljs-literal\">undefined</span>&gt;(<span class=\"hljs-attr\">callback</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\"><span class=\"hljs-variable language_\">this</span>: This, value: T, index: <span class=\"hljs-built_in\">number</span>, array: T[]</span>) =&gt;</span> U | <span class=\"hljs-title class_\">ReadonlyArray</span>&lt;U&gt;, thisArg?: <span class=\"hljs-title class_\">This</span> | <span class=\"hljs-literal\">undefined</span>): U[]\n</code></pre>\n<hr>\n<p>Calls a defined callback function on each element of an array. Then, flattens the result into\na new array.\nThis is identical to a map followed by flat with depth 1.</p>\n","7827":"index.ts.html#193","7829":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">e</span>: <span class=\"hljs-title class_\">ItemEdge</span>&lt;<span class=\"hljs-title class_\">ReferenceResult</span>, <span class=\"hljs-title class_\">Range</span>&gt;\n</code></pre>\n","7845":"index.ts.html#194","7847":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">x</span>: <span class=\"hljs-title class_\">Id</span>\n</code></pre>\n","7873":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">references</span>: <span class=\"hljs-built_in\">string</span>[]\n</code></pre>\n","7882":"index.ts.html#198","7884":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">e</span>: <span class=\"hljs-title class_\">ItemEdge</span>&lt;<span class=\"hljs-title class_\">ReferenceResult</span>, <span class=\"hljs-title class_\">Range</span>&gt;\n</code></pre>\n","7900":"index.ts.html#199","7902":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">x</span>: <span class=\"hljs-title class_\">Id</span>\n</code></pre>\n","7939":"index.ts.html#207","7941":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">highlighted</span>: {\n    <span class=\"hljs-attr\">highlighted</span>: <span class=\"hljs-built_in\">string</span>;\n    <span class=\"hljs-attr\">destPath</span>: <span class=\"hljs-built_in\">string</span>;\n    <span class=\"hljs-attr\">doc</span>: <span class=\"hljs-title class_\">Document</span>;\n    <span class=\"hljs-attr\">additions</span>: <span class=\"hljs-title class_\">Addition</span>[];\n}[]\n</code></pre>\n","7950":"index.ts.html#207","7952":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">x</span>: {\n    <span class=\"hljs-attr\">destPath</span>: <span class=\"hljs-built_in\">string</span>;\n    <span class=\"hljs-attr\">doc</span>: <span class=\"hljs-title class_\">Document</span>;\n    <span class=\"hljs-attr\">additions</span>: <span class=\"hljs-title class_\">Addition</span>[];\n}\n</code></pre>\n","7962":"index.ts.html#208","7964":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">srcRaw</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","7981":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">highlighted</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","7994":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-title class_\">HighlightOptions</span>.<span class=\"hljs-property\">language</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","8006":"node_modules/lsif-protocol/lib/protocol.d.ts.html#320","8008":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-title class_\">Document</span>.<span class=\"hljs-property\">languageId</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n<hr>\n<p>The document's language Id as defined in the LSP\n(https://microsoft.github.io/language-server-protocol/specification)</p>\n","8024":"index.ts.html#210","8026":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">highlighted</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","8044":"index.ts.html#214","8046":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">added</span>: {\n    <span class=\"hljs-attr\">src</span>: <span class=\"hljs-built_in\">string</span>;\n    <span class=\"hljs-attr\">highlighted</span>: <span class=\"hljs-built_in\">string</span>;\n    <span class=\"hljs-attr\">destPath</span>: <span class=\"hljs-built_in\">string</span>;\n    <span class=\"hljs-attr\">doc</span>: <span class=\"hljs-title class_\">Document</span>;\n    <span class=\"hljs-attr\">additions</span>: <span class=\"hljs-title class_\">Addition</span>[];\n}[]\n</code></pre>\n","8055":"index.ts.html#214","8057":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">x</span>: {\n    <span class=\"hljs-attr\">highlighted</span>: <span class=\"hljs-built_in\">string</span>;\n    <span class=\"hljs-attr\">destPath</span>: <span class=\"hljs-built_in\">string</span>;\n    <span class=\"hljs-attr\">doc</span>: <span class=\"hljs-title class_\">Document</span>;\n    <span class=\"hljs-attr\">additions</span>: <span class=\"hljs-title class_\">Addition</span>[];\n}\n</code></pre>\n","8069":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">src</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","8088":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">src</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","8106":"index.ts.html#220","8108":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">generated</span>: {\n    <span class=\"hljs-attr\">html</span>: <span class=\"hljs-built_in\">string</span>;\n    <span class=\"hljs-attr\">destPath</span>: <span class=\"hljs-built_in\">string</span>;\n    <span class=\"hljs-attr\">src</span>: <span class=\"hljs-built_in\">string</span>;\n}[]\n</code></pre>\n","8117":"index.ts.html#220","8119":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">var</span> <span class=\"hljs-attr\">doc</span>: <span class=\"hljs-title class_\">Document</span>\n</code></pre>\n","8126":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">var</span> <span class=\"hljs-attr\">destPath</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","8133":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">var</span> <span class=\"hljs-attr\">src</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","8143":"index.ts.html#221","8145":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">path</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","8156":"index.ts.html#222","8158":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">pathSplitted</span>: <span class=\"hljs-built_in\">string</span>[]\n</code></pre>\n","8169":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">filename</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","8178":"index.ts.html#224","8180":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">depth</span>: <span class=\"hljs-built_in\">number</span>\n</code></pre>\n","8191":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">html</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","8202":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">src</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","8209":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">filename</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","8216":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">tree</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","8229":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">distPath</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","8240":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">basePath</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","8248":"node_modules/typescript-lsif/lib/lib.es2015.core.d.ts.html#447","8250":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">String</span>.<span class=\"hljs-title function_\">repeat</span>(<span class=\"hljs-attr\">count</span>: <span class=\"hljs-built_in\">number</span>): <span class=\"hljs-built_in\">string</span>\n</code></pre>\n<hr>\n<p>Returns a String value that is made from count copies appended together. If count is 0,\nthe empty string is returned.</p>\n","8266":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">html</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","8273":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">destPath</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","8280":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">src</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","8306":"index.ts.html#235","8308":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">var</span> <span class=\"hljs-attr\">destPath</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","8313":"index.ts.html#235","8315":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">var</span> <span class=\"hljs-attr\">html</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","8320":"index.ts.html#235","8322":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">var</span> <span class=\"hljs-attr\">src</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n"}}