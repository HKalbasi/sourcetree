{"hovers":{"x4744":{"content":4746,"references":5073},"x4754":{"content":4756,"references":5080},"x4764":{"references":5084},"x4772":{"content":4774,"references":4964},"x4782":{"content":4784,"references":5095},"x4786":{"content":4746,"definition":4744,"references":5073},"x4794":{"references":5099},"x4802":{"content":4804,"references":4966},"x4812":{"references":5107},"x4820":{"content":4822,"references":5113},"x4827":{"content":4829,"references":5119},"x4834":{"references":5123},"x4839":{"content":4841,"references":5129},"x4843":{"content":4746,"definition":4744,"references":5073},"x4848":{"content":4850,"references":5136},"x4855":{"content":4857,"references":5143},"x4862":{"content":4864,"references":5150},"x4866":{"content":4841,"definition":4839,"references":5129},"x4871":{"references":5154},"x4876":{"content":4878,"references":5160},"x4880":{"content":4857,"definition":4855,"references":5143},"x4885":{"content":4887,"references":5167},"x4889":{"content":4864,"definition":4862,"references":5150},"x4903":{"content":4899,"definition":4897,"references":5171},"x4908":{"content":4910,"references":5177},"x4915":{"references":5181},"x4917":{"content":4910,"definition":4908,"references":5177},"x4919":{"content":4756,"definition":4754,"references":5080},"x4921":{"content":4878,"definition":4876,"references":5160},"x4923":{"content":4887,"definition":4885,"references":5167},"x4925":{"content":4887,"definition":4885,"references":5167},"x4930":{"content":4932,"references":5187},"x4934":{"content":4878,"definition":4876,"references":5160},"x4939":{"content":4941,"references":5193},"x4946":{"content":4948,"references":5199},"x4953":{"references":5202},"x4955":{"content":4864,"definition":4862,"references":5150},"x4957":{"content":2571,"definition":2569,"references":4193},"x4959":{"content":4887,"definition":4885,"references":5167},"x4961":{"content":4887,"definition":4885,"references":5167},"x4971":{"references":5206},"x4973":{"content":2882,"definition":2880,"references":4321},"x4975":{"content":4864,"definition":4862,"references":5150},"x4977":{"content":4887,"definition":4885,"references":5167},"x4979":{"content":4784,"definition":4782,"references":5095},"x4981":{"content":4864,"definition":4862,"references":5150},"x4983":{"content":4829,"definition":4827,"references":5119},"x4985":{"content":840,"definition":838,"references":1242},"x4990":{"content":4992,"references":5214},"x4997":{"references":5218},"x5002":{"content":5004,"references":5224},"x5006":{"content":4992,"definition":4990,"references":5214},"x5008":{"content":1887,"definition":1885,"references":3959},"x5013":{"content":5015,"references":5232},"x5017":{"content":4850,"definition":4848,"references":5136},"x5019":{"content":5004,"definition":5002,"references":5224},"x5031":{"content":5029,"definition":5027,"references":5236},"x5033":{"content":5015,"definition":5013,"references":5232},"x5035":{"content":2571,"definition":2569,"references":4193},"x5040":{"content":5042,"references":5242},"x5047":{"content":5049,"references":5248},"x5051":{"content":5004,"definition":5002,"references":5224},"x5053":{"content":5004,"definition":5002,"references":5224},"x5055":{"content":3695,"definition":3693,"references":4713},"x5060":{"references":5252},"x5062":{"content":4841,"definition":4839,"references":5129}},"data":{"838":"node_modules/typescript-lsif/lib/lib.es5.d.ts.html#1355","840":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">Array</span>&lt;T&gt;.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-attr\">callbackfn</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">value: T, index: <span class=\"hljs-built_in\">number</span>, array: T[]</span>) =&gt;</span> <span class=\"hljs-built_in\">void</span>, thisArg?: <span class=\"hljs-built_in\">any</span>): <span class=\"hljs-built_in\">void</span>\n</code></pre>\n<hr>\n<p>Performs the specified action for each element in an array.</p>\n","1885":"node_modules/typescript-lsif/lib/lib.es5.d.ts.html#475","1887":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">String</span>.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-attr\">separator</span>: <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-title class_\">RegExp</span>, limit?: <span class=\"hljs-built_in\">number</span> | <span class=\"hljs-literal\">undefined</span>): <span class=\"hljs-built_in\">string</span>[] (+<span class=\"hljs-number\">1</span> overload)\n</code></pre>\n<hr>\n<p>Split a string into substrings using the specified separator and return them as an array.</p>\n","2569":"node_modules/typescript-lsif/lib/lib.es5.d.ts.html#1242","2571":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">Array</span>&lt;T&gt;.<span class=\"hljs-title function_\">push</span>(...<span class=\"hljs-attr\">items</span>: T[]): <span class=\"hljs-built_in\">number</span>\n</code></pre>\n<hr>\n<p>Appends new elements to the end of an array, and returns the new length of the array.</p>\n","2880":"node_modules/typescript-lsif/lib/lib.es5.d.ts.html#972","2882":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">interface</span> Error\n</code></pre>\n","3693":"node_modules/typescript-lsif/lib/lib.es5.d.ts.html#1224","3695":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-title class_\">Array</span>&lt;T&gt;.<span class=\"hljs-property\">length</span>: <span class=\"hljs-built_in\">number</span>\n</code></pre>\n<hr>\n<p>Gets or sets the length of the array. This is a number one higher than the highest index in the array.</p>\n","4744":"tree.ts.html#1","4746":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">TreeNode</span> = {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span>;\n} &amp; ({\n    <span class=\"hljs-attr\">kind</span>: <span class=\"hljs-string\">&#x27;folder&#x27;</span>;\n    <span class=\"hljs-attr\">children</span>: <span class=\"hljs-title class_\">TreeNode</span>[];\n} | {\n    <span class=\"hljs-attr\">kind</span>: <span class=\"hljs-string\">&#x27;file&#x27;</span>;\n})\n</code></pre>\n","4754":"tree.ts.html#1","4756":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","4774":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">kind</span>: <span class=\"hljs-string\">&quot;folder&quot;</span>\n</code></pre>\n","4782":"tree.ts.html#3","4784":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">children</span>: <span class=\"hljs-title class_\">TreeNode</span>[]\n</code></pre>\n","4804":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">kind</span>: <span class=\"hljs-string\">&quot;file&quot;</span>\n</code></pre>\n","4822":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">buildTree</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">list: <span class=\"hljs-built_in\">string</span>[]</span>) =&gt;</span> <span class=\"hljs-title class_\">TreeNode</span>[]\n</code></pre>\n","4827":"tree.ts.html#8","4829":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">list</span>: <span class=\"hljs-built_in\">string</span>[]\n</code></pre>\n","4839":"tree.ts.html#9","4841":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">tree</span>: <span class=\"hljs-title class_\">TreeNode</span>[]\n</code></pre>\n","4848":"tree.ts.html#10","4850":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">getFolder</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">path: <span class=\"hljs-built_in\">string</span>[], t?: TreeNode[]</span>) =&gt;</span> <span class=\"hljs-title class_\">TreeNode</span>[]\n</code></pre>\n","4855":"tree.ts.html#10","4857":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">path</span>: <span class=\"hljs-built_in\">string</span>[]\n</code></pre>\n","4862":"tree.ts.html#10","4864":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">t</span>: <span class=\"hljs-title class_\">TreeNode</span>[]\n</code></pre>\n","4876":"tree.ts.html#11","4878":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">p</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","4885":"tree.ts.html#12","4887":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">f</span>: <span class=\"hljs-title class_\">TreeNode</span> | <span class=\"hljs-literal\">undefined</span>\n</code></pre>\n","4897":"node_modules/typescript-lsif/lib/lib.es2015.core.d.ts.html#31","4899":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">Array</span>&lt;T&gt;.<span class=\"hljs-property\">find</span>&lt;S <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">T</span>&gt;(<span class=\"hljs-attr\">predicate</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\"><span class=\"hljs-variable language_\">this</span>: <span class=\"hljs-built_in\">void</span>, value: T, index: <span class=\"hljs-built_in\">number</span>, obj: T[]</span>) =&gt;</span> value is S, thisArg?: <span class=\"hljs-built_in\">any</span>): S | <span class=\"hljs-literal\">undefined</span> (+<span class=\"hljs-number\">1</span> overload)\n</code></pre>\n<hr>\n<p>Returns the value of the first element in the array where predicate is true, and undefined\notherwise.</p>\n","4908":"tree.ts.html#12","4910":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">x</span>: <span class=\"hljs-title class_\">TreeNode</span>\n</code></pre>\n","4932":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","4941":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">kind</span>: <span class=\"hljs-string\">&quot;folder&quot;</span>\n</code></pre>\n","4948":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">children</span>: <span class=\"hljs-title class_\">TreeNode</span>[]\n</code></pre>\n","4990":"tree.ts.html#29","4992":"<pre><code class=\"language-typescript\">(parameter) <span class=\"hljs-attr\">x</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n","5002":"tree.ts.html#30","5004":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">sx</span>: <span class=\"hljs-built_in\">string</span>[]\n</code></pre>\n","5013":"tree.ts.html#31","5015":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">folder</span>: <span class=\"hljs-title class_\">TreeNode</span>[]\n</code></pre>\n","5027":"node_modules/typescript-lsif/lib/lib.es5.d.ts.html#1279","5029":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">Array</span>&lt;T&gt;.<span class=\"hljs-title function_\">slice</span>(start?: <span class=\"hljs-built_in\">number</span> | <span class=\"hljs-literal\">undefined</span>, end?: <span class=\"hljs-built_in\">number</span> | <span class=\"hljs-literal\">undefined</span>): T[]\n</code></pre>\n<hr>\n<p>Returns a copy of a section of an array.\nFor both start and end, a negative index can be used to indicate an offset from the end of the array.\nFor example, -2 refers to the second to last element of the array.</p>\n","5042":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">kind</span>: <span class=\"hljs-string\">&quot;file&quot;</span>\n</code></pre>\n","5049":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span>\n</code></pre>\n"}}