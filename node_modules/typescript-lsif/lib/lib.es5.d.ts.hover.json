{"hovers":{"x328":{"content":330,"references":472},"x332":{"content":330,"definition":328,"references":472},"x334":{"content":330,"definition":328,"references":472},"x346":{"content":348,"references":475},"x838":{"content":840,"references":1242},"x958":{"content":960,"references":1312},"x1885":{"content":1887,"references":3959},"x1899":{"content":1901,"references":3962},"x1903":{"content":1901,"definition":1899,"references":3962},"x1927":{"content":1929,"references":3975},"x1948":{"content":1950,"references":3988},"x1952":{"content":1950,"definition":1948,"references":3988},"x1964":{"content":1966,"references":3991},"x2569":{"content":2571,"references":4193},"x2880":{"content":2882,"references":4321},"x2884":{"content":2882,"definition":2880,"references":4321},"x2977":{"content":2979,"references":4377},"x3065":{"content":3067,"references":4403},"x3079":{"content":3081,"references":3084},"x3693":{"content":3695,"references":4713},"x5027":{"content":5029,"references":5236},"x6211":{"content":6213,"references":8592},"x6604":{"content":6606,"references":8849},"x6663":{"content":6665,"definition":6679,"references":8872},"x6667":{"content":6665,"definition":6679,"references":8872},"x7572":{"content":7574,"references":9282},"x7576":{"content":7574,"definition":7572,"references":9282}},"data":{"328":"node_modules/typescript-lsif/lib/lib.es5.d.ts.html#729","330":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">interface</span> Date\n</code></pre>\n<hr>\n<p>Enables basic storage and retrieval of dates and times.</p>\n","348":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">Date</span>.<span class=\"hljs-title function_\">valueOf</span>(): <span class=\"hljs-built_in\">number</span>\n</code></pre>\n<hr>\n<p>Returns the stored time value in milliseconds since midnight, January 1, 1970 UTC.</p>\n","840":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">Array</span>&lt;T&gt;.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-attr\">callbackfn</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">value: T, index: <span class=\"hljs-built_in\">number</span>, array: T[]</span>) =&gt;</span> <span class=\"hljs-built_in\">void</span>, thisArg?: <span class=\"hljs-built_in\">any</span>): <span class=\"hljs-built_in\">void</span>\n</code></pre>\n<hr>\n<p>Performs the specified action for each element in an array.</p>\n","960":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-title class_\">String</span>.<span class=\"hljs-property\">length</span>: <span class=\"hljs-built_in\">number</span>\n</code></pre>\n<hr>\n<p>Returns the length of a String object.</p>\n","1887":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">String</span>.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-attr\">separator</span>: <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-title class_\">RegExp</span>, limit?: <span class=\"hljs-built_in\">number</span> | <span class=\"hljs-literal\">undefined</span>): <span class=\"hljs-built_in\">string</span>[] (+<span class=\"hljs-number\">1</span> overload)\n</code></pre>\n<hr>\n<p>Split a string into substrings using the specified separator and return them as an array.</p>\n","1899":"node_modules/typescript-lsif/lib/lib.es5.d.ts.html#1367","1901":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">Array</span>&lt;T&gt;.<span class=\"hljs-property\">filter</span>&lt;S <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">T</span>&gt;(<span class=\"hljs-attr\">predicate</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">value: T, index: <span class=\"hljs-built_in\">number</span>, array: T[]</span>) =&gt;</span> value is S, thisArg?: <span class=\"hljs-built_in\">any</span>): S[] (+<span class=\"hljs-number\">1</span> overload)\n</code></pre>\n<hr>\n<p>Returns the elements of an array that meet the condition specified in a callback function.</p>\n","1929":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">Array</span>&lt;T&gt;.<span class=\"hljs-property\">map</span>&lt;U&gt;(<span class=\"hljs-attr\">callbackfn</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">value: T, index: <span class=\"hljs-built_in\">number</span>, array: T[]</span>) =&gt;</span> U, thisArg?: <span class=\"hljs-built_in\">any</span>): U[]\n</code></pre>\n<hr>\n<p>Calls a defined callback function on each element of an array, and returns an array that contains the results.</p>\n","1948":"node_modules/typescript-lsif/lib/lib.es5.d.ts.html#1052","1950":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">interface</span> JSON\n</code></pre>\n<hr>\n<p>An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.</p>\n","1966":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-variable constant_\">JSON</span>.<span class=\"hljs-title function_\">parse</span>(<span class=\"hljs-attr\">text</span>: <span class=\"hljs-built_in\">string</span>, reviver?: (<span class=\"hljs-function\">(<span class=\"hljs-params\"><span class=\"hljs-variable language_\">this</span>: <span class=\"hljs-built_in\">any</span>, key: <span class=\"hljs-built_in\">string</span>, value: <span class=\"hljs-built_in\">any</span></span>) =&gt;</span> <span class=\"hljs-built_in\">any</span>) | <span class=\"hljs-literal\">undefined</span>): <span class=\"hljs-built_in\">any</span>\n</code></pre>\n<hr>\n<p>Converts a JavaScript Object Notation (JSON) string into an object.</p>\n","2571":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">Array</span>&lt;T&gt;.<span class=\"hljs-title function_\">push</span>(...<span class=\"hljs-attr\">items</span>: T[]): <span class=\"hljs-built_in\">number</span>\n</code></pre>\n<hr>\n<p>Appends new elements to the end of an array, and returns the new length of the array.</p>\n","2880":"node_modules/typescript-lsif/lib/lib.es5.d.ts.html#972","2882":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">interface</span> Error\n</code></pre>\n","2979":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">interface</span> Promise&lt;T&gt;\n</code></pre>\n<hr>\n<p>Represents the completion of an asynchronous operation</p>\n","3067":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">String</span>.<span class=\"hljs-title function_\">slice</span>(start?: <span class=\"hljs-built_in\">number</span> | <span class=\"hljs-literal\">undefined</span>, end?: <span class=\"hljs-built_in\">number</span> | <span class=\"hljs-literal\">undefined</span>): <span class=\"hljs-built_in\">string</span>\n</code></pre>\n<hr>\n<p>Returns a section of a string.</p>\n","3081":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">Uint</span>8<span class=\"hljs-built_in\">Array</span>.<span class=\"hljs-title function_\">toString</span>(): <span class=\"hljs-built_in\">string</span>\n</code></pre>\n<hr>\n<p>Returns a string representation of an array.</p>\n","3695":"<pre><code class=\"language-typescript\">(property) <span class=\"hljs-title class_\">Array</span>&lt;T&gt;.<span class=\"hljs-property\">length</span>: <span class=\"hljs-built_in\">number</span>\n</code></pre>\n<hr>\n<p>Gets or sets the length of the array. This is a number one higher than the highest index in the array.</p>\n","5029":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">Array</span>&lt;T&gt;.<span class=\"hljs-title function_\">slice</span>(start?: <span class=\"hljs-built_in\">number</span> | <span class=\"hljs-literal\">undefined</span>, end?: <span class=\"hljs-built_in\">number</span> | <span class=\"hljs-literal\">undefined</span>): T[]\n</code></pre>\n<hr>\n<p>Returns a copy of a section of an array.\nFor both start and end, a negative index can be used to indicate an offset from the end of the array.\nFor example, -2 refers to the second to last element of the array.</p>\n","6213":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">Array</span>&lt;T&gt;.<span class=\"hljs-title function_\">join</span>(separator?: <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-literal\">undefined</span>): <span class=\"hljs-built_in\">string</span>\n</code></pre>\n<hr>\n<p>Adds all the elements of an array into a string, separated by the specified separator string.</p>\n","6606":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">String</span>.<span class=\"hljs-title function_\">trim</span>(): <span class=\"hljs-built_in\">string</span>\n</code></pre>\n<hr>\n<p>Removes the leading and trailing white space and line terminator characters from a string.</p>\n","6665":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">interface</span> Array&lt;T&gt;\n</code></pre>\n","6679":"node_modules/@types/node/globals.d.ts.html#89","7572":"node_modules/typescript-lsif/lib/lib.es5.d.ts.html#1066","7574":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-variable constant_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(<span class=\"hljs-attr\">value</span>: <span class=\"hljs-built_in\">any</span>, replacer?: (<span class=\"hljs-function\">(<span class=\"hljs-params\"><span class=\"hljs-variable language_\">this</span>: <span class=\"hljs-built_in\">any</span>, key: <span class=\"hljs-built_in\">string</span>, value: <span class=\"hljs-built_in\">any</span></span>) =&gt;</span> <span class=\"hljs-built_in\">any</span>) | <span class=\"hljs-literal\">undefined</span>, space?: <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-built_in\">number</span> | <span class=\"hljs-literal\">undefined</span>): <span class=\"hljs-built_in\">string</span> (+<span class=\"hljs-number\">1</span> overload)\n</code></pre>\n<hr>\n<p>Converts a JavaScript value to a JavaScript Object Notation (JSON) string.</p>\n"}}