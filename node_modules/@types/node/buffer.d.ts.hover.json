{"hovers":{"x3091":{"content":3093,"references":10082}},"data":{"3093":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">Buffer</span>.<span class=\"hljs-title function_\">toString</span>(encoding?: <span class=\"hljs-title class_\">BufferEncoding</span> | <span class=\"hljs-literal\">undefined</span>, start?: <span class=\"hljs-built_in\">number</span> | <span class=\"hljs-literal\">undefined</span>, end?: <span class=\"hljs-built_in\">number</span> | <span class=\"hljs-literal\">undefined</span>): <span class=\"hljs-built_in\">string</span>\n</code></pre>\n<hr>\n<p>Decodes <code>buf</code> to a string according to the specified character encoding in<code>encoding</code>. <code>start</code> and <code>end</code> may be passed to decode only a subset of <code>buf</code>.</p>\n<p>If <code>encoding</code> is <code>'utf8'</code> and a byte sequence in the input is not valid UTF-8,\nthen each invalid byte is replaced with the replacement character <code>U+FFFD</code>.</p>\n<p>The maximum length of a string instance (in UTF-16 code units) is available\nas {@link constants.MAX_STRING_LENGTH}.</p>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Buffer</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;buffer&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> buf1 = <span class=\"hljs-title class_\">Buffer</span>.<span class=\"hljs-title function_\">allocUnsafe</span>(<span class=\"hljs-number\">26</span>);\n\n<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">26</span>; i++) {\n  <span class=\"hljs-comment\">// 97 is the decimal ASCII value for &#x27;a&#x27;.</span>\n  buf1[i] = i + <span class=\"hljs-number\">97</span>;\n}\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(buf1.<span class=\"hljs-title function_\">toString</span>(<span class=\"hljs-string\">&#x27;utf8&#x27;</span>));\n<span class=\"hljs-comment\">// Prints: abcdefghijklmnopqrstuvwxyz</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(buf1.<span class=\"hljs-title function_\">toString</span>(<span class=\"hljs-string\">&#x27;utf8&#x27;</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">5</span>));\n<span class=\"hljs-comment\">// Prints: abcde</span>\n\n<span class=\"hljs-keyword\">const</span> buf2 = <span class=\"hljs-title class_\">Buffer</span>.<span class=\"hljs-title function_\">from</span>(<span class=\"hljs-string\">&#x27;tést&#x27;</span>);\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(buf2.<span class=\"hljs-title function_\">toString</span>(<span class=\"hljs-string\">&#x27;hex&#x27;</span>));\n<span class=\"hljs-comment\">// Prints: 74c3a97374</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(buf2.<span class=\"hljs-title function_\">toString</span>(<span class=\"hljs-string\">&#x27;utf8&#x27;</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">3</span>));\n<span class=\"hljs-comment\">// Prints: té</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(buf2.<span class=\"hljs-title function_\">toString</span>(<span class=\"hljs-literal\">undefined</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">3</span>));\n<span class=\"hljs-comment\">// Prints: té</span>\n</code></pre>\n"}}