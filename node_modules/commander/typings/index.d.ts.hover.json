{"hovers":{"x9702":{"content":9704,"references":9963},"x9754":{"content":9756,"references":9975},"x9758":{"content":9756,"definition":9754,"references":9975},"x9760":{"content":9756,"definition":9754,"references":9975},"x9881":{"content":9883,"references":10043},"x9929":{"content":9931,"references":10059}},"data":{"9704":"<pre><code class=\"language-typescript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">program</span>: <span class=\"hljs-title class_\">Command</span>\n</code></pre>\n","9754":"node_modules/commander/typings/index.d.ts.html#477","9756":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">Command</span>.<span class=\"hljs-title function_\">option</span>(<span class=\"hljs-attr\">flags</span>: <span class=\"hljs-built_in\">string</span>, description?: <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-literal\">undefined</span>, defaultValue?: <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-built_in\">boolean</span> | <span class=\"hljs-literal\">undefined</span>): <span class=\"hljs-variable language_\">this</span> (+<span class=\"hljs-number\">2</span> overloads)\n</code></pre>\n<hr>\n<p>Define option with <code>flags</code>, <code>description</code> and optional\ncoercion <code>fn</code>.</p>\n<p>The <code>flags</code> string contains the short and/or long flags,\nseparated by comma, a pipe or space. The following are all valid\nall will output this way when <code>--help</code> is used.</p>\n<pre><code>&quot;-p, --pepper&quot;\n&quot;-p|--pepper&quot;\n&quot;-p --pepper&quot;\n</code></pre>\n","9883":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">Command</span>.<span class=\"hljs-title function_\">parse</span>(argv?: <span class=\"hljs-built_in\">string</span>[] | <span class=\"hljs-literal\">undefined</span>, options?: <span class=\"hljs-title class_\">ParseOptions</span> | <span class=\"hljs-literal\">undefined</span>): <span class=\"hljs-variable language_\">this</span>\n</code></pre>\n<hr>\n<p>Parse <code>argv</code>, setting options and invoking commands when defined.</p>\n<p>The default expectation is that the arguments are from node and have the application as argv[0]\nand the script being run in argv[1], with user parameters after that.</p>\n","9931":"<pre><code class=\"language-typescript\">(method) <span class=\"hljs-title class_\">Command</span>.<span class=\"hljs-property\">opts</span>&lt;T <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">OptionValues</span>&gt;(): T\n</code></pre>\n<hr>\n<p>Return an object containing options as key-value pairs</p>\n"}}